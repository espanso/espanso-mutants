
*** espanso-engine/src/process/middleware/alt_code_synthesizer.rs:138:5: replace convert_cp437_code_to_unicode -> Option<u32> with Some(1)

*** mutation diff:
--- espanso-engine/src/process/middleware/alt_code_synthesizer.rs
+++ replace convert_cp437_code_to_unicode -> Option<u32> with Some(1)
@@ -130,275 +130,17 @@
         convert_cp437_code_to_unicode(code)?
     };
 
     char::from_u32(unicode_code).map(|c| c.to_string())
 }
 
 // Taken from: https://altcodeunicode.com/
 fn convert_cp437_code_to_unicode(code: u32) -> Option<u32> {
-    match code {
-        0 => Some(0x0000),   // Control character - null (NUL)
-        1 => Some(0x263A),   // White smiling face, smiley face
-        2 => Some(0x263B),   // Black smiling face
-        3 => Some(0x2665),   // Black heart suit
-        4 => Some(0x2666),   // Black diamond suit
-        5 => Some(0x2663),   // Black club suit
-        6 => Some(0x2660),   // Black spade suit
-        7 => Some(0x2022),   // Bullet
-        8 => Some(0x25D8),   // Inverse bullet
-        9 => Some(0x25CB),   // White circle
-        10 => Some(0x25D9),  // Inverse white circle
-        11 => Some(0x2642),  // Male sign, mars, alchemical symbol for iron
-        12 => Some(0x2640),  // Female sign, venus, alchemical symbol for copper
-        13 => Some(0x266A),  // Eighth note, quaver
-        14 => Some(0x266B),  // Beamed eighth notes, barred eighth notes, beamed quavers
-        15 => Some(0x263C),  // White sun with rays
-        16 => Some(0x25BA),  // Black right-pointing pointer
-        17 => Some(0x25C4),  // Black left-pointing pointer
-        18 => Some(0x2195),  // Up down arrow
-        19 => Some(0x203C),  // Double exclamation mark
-        20 => Some(0x00B6),  // Pilcrow sign, paragraph sign
-        21 => Some(0x00A7),  // Section sign
-        22 => Some(0x25AC),  // Black rectangle
-        23 => Some(0x21A8),  // Up down arrow with base
-        24 => Some(0x2191),  // Upwards arrow
-        25 => Some(0x2193),  // Downwards arrow
-        26 => Some(0x2192),  // Rightwards arrow, Z notation total function
-        27 => Some(0x2190),  // Leftwards arrow
-        28 => Some(0x221F),  // Right angle
-        29 => Some(0x2194),  // Left right arrow, Z notation relation
-        30 => Some(0x25B2),  // Black up-pointing triangle
-        31 => Some(0x25BC),  // Black down-pointing triangle
-        32 => Some(0x0020),  // Space
-        33 => Some(0x0021),  // Exclamation mark, factorial
-        34 => Some(0x0022),  // Quotation mark
-        35 => Some(0x0023),  // Number sign, pound sign, hash, crosshatch, octothorpe
-        36 => Some(0x0024),  // Dollar sign, milréis, escudo
-        37 => Some(0x0025),  // Percent sign
-        38 => Some(0x0026),  // Ampersand
-        39 => Some(0x0027),  // Apostrophe
-        40 => Some(0x0028),  // Left parenthesis, opening parenthesis
-        41 => Some(0x0029),  // Right parenthesis, closing parenthesis
-        42 => Some(0x002A),  // Asterisk, star
-        43 => Some(0x002B),  // Plus sign
-        44 => Some(0x002C),  // Comma, decimal separator
-        45 => Some(0x002D),  // Hyphen, minus sign
-        46 => Some(0x002E),  // Full stop, period, dot, decimal point
-        47 => Some(0x002F),  // Solidus, slash, forward slash, virgule
-        48 => Some(0x0030),  // Digit zero
-        49 => Some(0x0031),  // Digit one
-        50 => Some(0x0032),  // Digit two
-        51 => Some(0x0033),  // Digit three
-        52 => Some(0x0034),  // Digit four
-        53 => Some(0x0035),  // Digit five
-        54 => Some(0x0036),  // Digit six
-        55 => Some(0x0037),  // Digit seven
-        56 => Some(0x0038),  // Digit eight
-        57 => Some(0x0039),  // Digit nine
-        58 => Some(0x003A),  // Colon
-        59 => Some(0x003B),  // Semicolon
-        60 => Some(0x003C),  // Less-than sign
-        61 => Some(0x003D),  // Equals sign
-        62 => Some(0x003E),  // Greater-than sign
-        63 => Some(0x003F),  // Question mark
-        64 => Some(0x0040),  // Commercial at, at sign
-        65 => Some(0x0041),  // Latin capital letter A
-        66 => Some(0x0042),  // Latin capital letter B
-        67 => Some(0x0043),  // Latin capital letter C
-        68 => Some(0x0044),  // Latin capital letter D
-        69 => Some(0x0045),  // Latin capital letter E
-        70 => Some(0x0046),  // Latin capital letter F
-        71 => Some(0x0047),  // Latin capital letter G
-        72 => Some(0x0048),  // Latin capital letter H
-        73 => Some(0x0049),  // Latin capital letter I
-        74 => Some(0x004A),  // Latin capital letter J
-        75 => Some(0x004B),  // Latin capital letter K
-        76 => Some(0x004C),  // Latin capital letter L
-        77 => Some(0x004D),  // Latin capital letter M
-        78 => Some(0x004E),  // Latin capital letter N
-        79 => Some(0x004F),  // Latin capital letter O
-        80 => Some(0x0050),  // Latin capital letter P
-        81 => Some(0x0051),  // Latin capital letter Q
-        82 => Some(0x0052),  // Latin capital letter R
-        83 => Some(0x0053),  // Latin capital letter S
-        84 => Some(0x0054),  // Latin capital letter T
-        85 => Some(0x0055),  // Latin capital letter U
-        86 => Some(0x0056),  // Latin capital letter V
-        87 => Some(0x0057),  // Latin capital letter W
-        88 => Some(0x0058),  // Latin capital letter X
-        89 => Some(0x0059),  // Latin capital letter Y
-        90 => Some(0x005A),  // Latin capital letter Z
-        91 => Some(0x005B),  // Left square bracket, opening square bracket
-        92 => Some(0x005C),  // Reverse solidus, back slash
-        93 => Some(0x005D),  // Right square bracket, closing square bracket
-        94 => Some(0x005E),  // Circumflex accent
-        95 => Some(0x005F),  // Low line, underscore
-        96 => Some(0x0060),  // Grave accent
-        97 => Some(0x0061),  // Latin small letter a
-        98 => Some(0x0062),  // Latin small letter b
-        99 => Some(0x0063),  // Latin small letter c
-        100 => Some(0x0064), // Latin small letter d
-        101 => Some(0x0065), // Latin small letter e
-        102 => Some(0x0066), // Latin small letter f
-        103 => Some(0x0067), // Latin small letter g
-        104 => Some(0x0068), // Latin small letter h
-        105 => Some(0x0069), // Latin small letter i
-        106 => Some(0x006A), // Latin small letter j
-        107 => Some(0x006B), // Latin small letter k
-        108 => Some(0x006C), // Latin small letter l
-        109 => Some(0x006D), // Latin small letter m
-        110 => Some(0x006E), // Latin small letter n
-        111 => Some(0x006F), // Latin small letter o
-        112 => Some(0x0070), // Latin small letter p
-        113 => Some(0x0071), // Latin small letter q
-        114 => Some(0x0072), // Latin small letter r
-        115 => Some(0x0073), // Latin small letter s
-        116 => Some(0x0074), // Latin small letter t
-        117 => Some(0x0075), // Latin small letter u
-        118 => Some(0x0076), // Latin small letter v
-        119 => Some(0x0077), // Latin small letter w
-        120 => Some(0x0078), // Latin small letter x
-        121 => Some(0x0079), // Latin small letter y
-        122 => Some(0x007A), // Latin small letter z
-        123 => Some(0x007B), // Left curly bracket, opening curly bracket, left brace
-        124 => Some(0x007C), // Vertical line, vertical bar
-        125 => Some(0x007D), // Right curly bracket, closing curly bracket, right brace
-        126 => Some(0x007E), // Tilde
-        127 => Some(0x2302), // House
-        128 => Some(0x00C7), // Latin capital letter C with cedilla
-        129 => Some(0x00FC), // Latin small letter u with diaeresis
-        130 => Some(0x00E9), // Latin small letter e with acute
-        131 => Some(0x00E2), // Latin small letter a with circumflex
-        132 => Some(0x00E4), // Latin small letter a with diaeresis
-        133 => Some(0x00E0), // Latin small letter a with grave
-        134 => Some(0x00E5), // Latin small letter a with ring above
-        135 => Some(0x00E7), // Latin small letter c with cedilla
-        136 => Some(0x00EA), // Latin small letter e with circumflex
-        137 => Some(0x00EB), // Latin small letter e with diaeresis
-        138 => Some(0x00E8), // Latin small letter e with grave
-        139 => Some(0x00EF), // Latin small letter i with diaeresis
-        140 => Some(0x00EE), // Latin small letter i with circumflex
-        141 => Some(0x00EC), // Latin small letter i with grave
-        142 => Some(0x00C4), // Latin capital letter A with diaeresis
-        143 => Some(0x00C5), // Latin capital letter A with ring above
-        144 => Some(0x00C9), // Latin capital letter E with acute
-        145 => Some(0x00E6), // Latin small letter ae, ash (from Old English æsc)
-        146 => Some(0x00C6), // Latin capital letter AE
-        147 => Some(0x00F4), // Latin small letter o with circumflex
-        148 => Some(0x00F6), // Latin small letter o with diaeresis
-        149 => Some(0x00F2), // Latin small letter o with grave
-        150 => Some(0x00FB), // Latin small letter u with circumflex
-        151 => Some(0x00F9), // Latin small letter u with grave
-        152 => Some(0x00FF), // Latin small letter y with diaeresis
-        153 => Some(0x00D6), // Latin capital letter O with diaeresis
-        154 => Some(0x00DC), // Latin capital letter U with diaeresis
-        155 => Some(0x00A2), // Cent sign
-        156 => Some(0x00A3), // Pound sign, pound sterling, Irish punt, lira sign
-        157 => Some(0x00A5), // Yen sign, yuan sign
-        158 => Some(0x20A7), // Peseta sign
-        159 => Some(0x0192), // Latin small letter f with hook, florin currency symbol, function symbol
-        160 => Some(0x00E1), // Latin small letter a with acute
-        161 => Some(0x00ED), // Latin small letter i with acute
-        162 => Some(0x00F3), // Latin small letter o with acute
-        163 => Some(0x00FA), // Latin small letter u with acute
-        164 => Some(0x00F1), // Latin small letter n with tilde, small letter enye
-        165 => Some(0x00D1), // Latin capital letter N with tilde, capital letter enye
-        166 => Some(0x00AA), // Feminine ordinal indicator
-        167 => Some(0x00BA), // Masculine ordinal indicator
-        168 => Some(0x00BF), // Inverted question mark, turned question mark
-        169 => Some(0x2310), // Reversed not sign, beginning of line
-        170 => Some(0x00AC), // Not sign, angled dash
-        171 => Some(0x00BD), // Vulgar fraction one half
-        172 => Some(0x00BC), // Vulgar fraction one quarter
-        173 => Some(0x00A1), // Inverted exclamation mark
-        174 => Some(0x00AB), // Left-pointing double angle quotation mark, left guillemet, chevrons (in typography)
-        175 => Some(0x00BB), // Right-pointing double angle quotation mark, right guillemet
-        176 => Some(0x2591), // Light shade
-        177 => Some(0x2592), // Medium shade, speckles fill, dotted fill
-        178 => Some(0x2593), // Dark shade
-        179 => Some(0x2502), // Box drawings light vertical
-        180 => Some(0x2524), // Box drawings light vertical and left
-        181 => Some(0x2561), // Box drawings vertical single and left double
-        182 => Some(0x2562), // Box drawings vertical double and left single
-        183 => Some(0x2556), // Box drawings down double and left single
-        184 => Some(0x2555), // Box drawings down single and left double
-        185 => Some(0x2563), // Box drawings double vertical and left
-        186 => Some(0x2551), // Box drawings double vertical
-        187 => Some(0x2557), // Box drawings double down and left
-        188 => Some(0x255D), // Box drawings double up and left
-        189 => Some(0x255C), // Box drawings up double and left single
-        190 => Some(0x255B), // Box drawings up single and left double
-        191 => Some(0x2510), // Box drawings light down and left
-        192 => Some(0x2514), // Box drawings light up and right
-        193 => Some(0x2534), // Box drawings light up and horizontal
-        194 => Some(0x252C), // Box drawings light down and horizontal
-        195 => Some(0x251C), // Box drawings light vertical and right
-        196 => Some(0x2500), // Box drawings light horizontal
-        197 => Some(0x253C), // Box drawings light vertical and horizontal
-        198 => Some(0x255E), // Box drawings vertical single and right double
-        199 => Some(0x255F), // Box drawings vertical double and right single
-        200 => Some(0x255A), // Box drawings double up and right
-        201 => Some(0x2554), // Box drawings double down and right
-        202 => Some(0x2569), // Box drawings double up and horizontal
-        203 => Some(0x2566), // Box drawings double down and horizontal
-        204 => Some(0x2560), // Box drawings double vertical and right
-        205 => Some(0x2550), // Box drawings double horizontal
-        206 => Some(0x256C), // Box drawings double vertical and horizontal
-        207 => Some(0x2567), // Box drawings up single and horizontal double
-        208 => Some(0x2568), // Box drawings up double and horizontal single
-        209 => Some(0x2564), // Box drawings down single and horizontal double
-        210 => Some(0x2565), // Box drawings down double and horizontal single
-        211 => Some(0x2559), // Box drawings up double and right single
-        212 => Some(0x2558), // Box drawings up single and right double
-        213 => Some(0x2552), // Box drawings down single and right double
-        214 => Some(0x2553), // Box drawings down double and right single
-        215 => Some(0x256B), // Box drawings vertical double and horizontal single
-        216 => Some(0x256A), // Box drawings vertical single and horizontal double
-        217 => Some(0x2518), // Box drawings light up and left
-        218 => Some(0x250C), // Box drawings light down and right
-        219 => Some(0x2588), // Full block, solid block
-        220 => Some(0x2584), // Lower half block
-        221 => Some(0x258C), // Left half block
-        222 => Some(0x2590), // Right half block
-        223 => Some(0x2580), // Upper half block
-        224 => Some(0x03B1), // Greek small letter alpha
-        225 => Some(0x00DF), // Latin small letter sharp s, eszett
-        226 => Some(0x0393), // Greek capital letter gamma
-        227 => Some(0x03C0), // Greek small letter pi
-        228 => Some(0x03A3), // Greek capital letter sigma
-        229 => Some(0x03C3), // Greek small letter sigma
-        230 => Some(0x00B5), // Micro sign
-        231 => Some(0x03A4), // Greek capital letter tau
-        232 => Some(0x03A6), // Greek capital letter phi
-        233 => Some(0x0398), // Greek capital letter theta
-        234 => Some(0x03A9), // Greek capital letter omega
-        235 => Some(0x03B4), // Greek small letter delta
-        236 => Some(0x221E), // Infinity
-        237 => Some(0x03C6), // Greek small letter phi
-        238 => Some(0x03B5), // Greek small letter epsilon
-        239 => Some(0x2229), // Intersection
-        240 => Some(0x2261), // Identical to
-        241 => Some(0x00B1), // Plus-minus sign
-        242 => Some(0x2265), // Greater-than or equal to
-        243 => Some(0x2264), // Less-than or equal to
-        244 => Some(0x2320), // Top half integral
-        245 => Some(0x2321), // Bottom half integral
-        246 => Some(0x00F7), // Division sign, obelus
-        247 => Some(0x2248), // Almost equal to, asymptotic to
-        248 => Some(0x00B0), // Degree sign
-        249 => Some(0x2219), // Bullet operator
-        250 => Some(0x00B7), // Middle dot, midpoint (in typography), interpunct, Georgian comma, Greek ano teleia
-        251 => Some(0x221A), // Square root, radical sign
-        252 => Some(0x207F), // Superscript Latin small letter n
-        253 => Some(0x00B2), // Superscript two, squared
-        254 => Some(0x25A0), // Black square
-        255 => Some(0x00A0), // No-break space, non-breaking space, nbsp
-        _ => None,
-    }
+    Some(1) /* ~ changed by cargo-mutants ~ */
 }
 
 // Taken from here: https://unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1252.TXT
 /*
 #
 #    Name:     cp1252 to Unicode table
 #    Unicode version: 2.0
 #    Table version: 2.01


*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --no-run --verbose --package=espanso-engine@0.1.0
       Fresh cfg-if v1.0.0
       Fresh siphasher v0.3.6
       Fresh unicode-ident v1.0.12
       Fresh ppv-lite86 v0.2.10
       Fresh autocfg v1.1.0
       Fresh lazy_static v1.5.0
       Fresh phf_shared v0.8.0
       Fresh new_debug_unreachable v1.0.4
       Fresh proc-macro2 v1.0.94
       Fresh scopeguard v1.1.0
       Fresh mac v0.1.1
       Fresh quote v1.0.35
       Fresh getrandom v0.1.16
       Fresh getrandom v0.2.2
       Fresh futf v0.1.4
       Fresh crossbeam-utils v0.8.19
       Fresh serde v1.0.123
       Fresh phf_shared v0.10.0
       Fresh rand_core v0.5.1
       Fresh rand_core v0.6.2
       Fresh precomputed-hash v0.1.1
       Fresh unicode-xid v0.2.1
       Fresh utf-8 v0.7.6
       Fresh phf v0.10.1
       Fresh log v0.4.14
       Fresh rand_chacha v0.2.2
       Fresh rand_pcg v0.2.1
       Fresh rand_chacha v0.3.0
       Fresh syn v1.0.67
       Fresh tendril v0.4.2
       Fresh string_cache v0.8.1
       Fresh rand v0.7.3
       Fresh rand v0.8.3
       Fresh libc v0.2.161
       Fresh memoffset v0.6.5
       Fresh memchr v2.5.0
       Fresh phf_generator v0.8.0
       Fresh phf_generator v0.10.0
       Fresh syn v2.0.100
       Fresh smallvec v1.13.2
       Fresh phf_codegen v0.10.0
       Fresh string_cache_codegen v0.5.1
       Fresh lock_api v0.4.11
       Fresh parking_lot_core v0.9.9
       Fresh crossbeam-epoch v0.9.8
       Fresh thiserror-impl v1.0.56
       Fresh aho-corasick v0.7.19
       Fresh hashbrown v0.12.3
       Fresh regex-syntax v0.6.27
       Fresh once_cell v1.19.0
       Fresh thiserror v1.0.56
       Fresh crossbeam-queue v0.3.5
       Fresh crossbeam-deque v0.8.1
       Fresh dashmap v5.4.0
       Fresh regex v1.5.5
       Fresh crossbeam-channel v0.5.0
       Fresh pipeline v0.5.0
       Fresh unicode-width v0.1.8
       Fresh unicode-segmentation v1.12.0
       Fresh markup5ever v0.11.0
       Fresh anyhow v1.0.38
       Fresh markdown v0.3.0
       Fresh crossbeam v0.8.1
       Fresh html5ever v0.26.0
       Fresh xml5ever v0.17.0
       Fresh html2text v0.12.0
       Dirty espanso-engine v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-engine): the file `espanso-engine/src/process/middleware/alt_code_synthesizer.rs` has changed (1745786920.256159637s, 1s after last build at 1745786919.585018632s)
   Compiling espanso-engine v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-engine)
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_engine --edition=2021 espanso-engine/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --test --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=77ecac42cd76ea87 -C extra-filename=-736ee6c99a8d5179 --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rlib --extern crossbeam=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libcrossbeam-8841152c4f26c132.rlib --extern html2text=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libhtml2text-dd2cb502d2a044fb.rlib --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rlib --extern markdown=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libmarkdown-72cc0aa38afcc09b.rlib --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rlib --extern unicode_segmentation=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libunicode_segmentation-a578f495eddae48f.rlib`
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_engine --edition=2021 espanso-engine/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=b4b5c63eb9fb35b1 -C extra-filename=-85d5814a48d06b68 --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rmeta --extern crossbeam=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libcrossbeam-8841152c4f26c132.rmeta --extern html2text=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libhtml2text-dd2cb502d2a044fb.rmeta --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rmeta --extern markdown=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libmarkdown-72cc0aa38afcc09b.rmeta --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rmeta --extern unicode_segmentation=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libunicode_segmentation-a578f495eddae48f.rmeta`
warning: unused variable: `code`
   --> espanso-engine/src/process/middleware/alt_code_synthesizer.rs:137:34
    |
137 | fn convert_cp437_code_to_unicode(code: u32) -> Option<u32> {
    |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_code`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `espanso-engine` (lib test) generated 1 warning
warning: `espanso-engine` (lib) generated 1 warning (1 duplicate)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.33s
  Executable `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_engine-736ee6c99a8d5179`

*** result: Success

*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --verbose --package=espanso-engine@0.1.0
       Fresh cfg-if v1.0.0
       Fresh unicode-ident v1.0.12
       Fresh siphasher v0.3.6
       Fresh ppv-lite86 v0.2.10
       Fresh autocfg v1.1.0
       Fresh lazy_static v1.5.0
       Fresh phf_shared v0.8.0
       Fresh new_debug_unreachable v1.0.4
       Fresh proc-macro2 v1.0.94
       Fresh mac v0.1.1
       Fresh scopeguard v1.1.0
       Fresh quote v1.0.35
       Fresh getrandom v0.1.16
       Fresh getrandom v0.2.2
       Fresh futf v0.1.4
       Fresh crossbeam-utils v0.8.19
       Fresh serde v1.0.123
       Fresh phf_shared v0.10.0
       Fresh rand_core v0.5.1
       Fresh rand_core v0.6.2
       Fresh precomputed-hash v0.1.1
       Fresh unicode-xid v0.2.1
       Fresh utf-8 v0.7.6
       Fresh log v0.4.14
       Fresh phf v0.10.1
       Fresh rand_chacha v0.3.0
       Fresh rand_chacha v0.2.2
       Fresh rand_pcg v0.2.1
       Fresh syn v1.0.67
       Fresh string_cache v0.8.1
       Fresh tendril v0.4.2
       Fresh rand v0.7.3
       Fresh rand v0.8.3
       Fresh libc v0.2.161
       Fresh memoffset v0.6.5
       Fresh memchr v2.5.0
       Fresh phf_generator v0.10.0
       Fresh phf_generator v0.8.0
       Fresh syn v2.0.100
       Fresh smallvec v1.13.2
       Fresh phf_codegen v0.10.0
       Fresh string_cache_codegen v0.5.1
       Fresh lock_api v0.4.11
       Fresh thiserror-impl v1.0.56
       Fresh parking_lot_core v0.9.9
       Fresh crossbeam-epoch v0.9.8
       Fresh aho-corasick v0.7.19
       Fresh hashbrown v0.12.3
       Fresh regex-syntax v0.6.27
       Fresh once_cell v1.19.0
       Fresh crossbeam-queue v0.3.5
       Fresh crossbeam-deque v0.8.1
       Fresh thiserror v1.0.56
       Fresh regex v1.5.5
       Fresh dashmap v5.4.0
       Fresh crossbeam-channel v0.5.0
       Fresh unicode-width v0.1.8
       Fresh pipeline v0.5.0
       Fresh unicode-segmentation v1.12.0
       Fresh markup5ever v0.11.0
       Fresh crossbeam v0.8.1
       Fresh markdown v0.3.0
       Fresh anyhow v1.0.38
       Fresh html5ever v0.26.0
       Fresh xml5ever v0.17.0
       Fresh html2text v0.12.0
warning: unused variable: `code`
   --> espanso-engine/src/process/middleware/alt_code_synthesizer.rs:137:34
    |
137 | fn convert_cp437_code_to_unicode(code: u32) -> Option<u32> {
    |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_code`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `espanso-engine` (lib) generated 1 warning
warning: `espanso-engine` (lib test) generated 1 warning (1 duplicate)
       Fresh espanso-engine v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-engine)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.05s
     Running `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_engine-736ee6c99a8d5179`

running 1 test
test process::middleware::markdown::tests::test_remove_paragraph_tag_if_single_occurrence ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests espanso_engine
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustdoc --edition=2021 --crate-type lib --color auto --crate-name espanso_engine --test espanso-engine/src/lib.rs --test-run-directory /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-engine -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rlib --extern crossbeam=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libcrossbeam-8841152c4f26c132.rlib --extern espanso_engine=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libespanso_engine-85d5814a48d06b68.rlib --extern html2text=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libhtml2text-dd2cb502d2a044fb.rlib --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rlib --extern markdown=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libmarkdown-72cc0aa38afcc09b.rlib --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rlib --extern unicode_segmentation=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libunicode_segmentation-a578f495eddae48f.rlib -C embed-bitcode=no --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' --error-format human`

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


*** result: Success

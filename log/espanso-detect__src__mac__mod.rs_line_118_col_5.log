
*** espanso-detect/src/mac/mod.rs:118:5: replace native_callback with ()

*** mutation diff:
--- espanso-detect/src/mac/mod.rs
+++ replace native_callback with ()
@@ -110,103 +110,17 @@
 }
 
 static CURRENT_SENDER: LazyLock<Arc<Mutex<Option<Sender<InputEvent>>>>> =
     LazyLock::new(|| Arc::new(Mutex::new(None)));
 static MODIFIER_STATE: LazyLock<Arc<Mutex<ModifierState>>> =
     LazyLock::new(|| Arc::new(Mutex::new(ModifierState::default())));
 
 extern "C" fn native_callback(raw_event: RawInputEvent) {
-    let lock = CURRENT_SENDER
-        .lock()
-        .expect("unable to acquire CocoaSource sender lock");
-
-    // Most of the times, when pressing a modifier key (such as Alt, Ctrl, Shift, Cmd),
-    // we get both a Pressed and Released event. This is important to keep Espanso's
-    // internal representation of modifiers in sync.
-    // Unfortunately, there are times when the corresponding "release" event is not sent,
-    // and this causes Espanso to mistakenly think that the modifier is still pressed.
-    // This can happen for various reasons, such as when using external bluetooth keyboards
-    // or certain keyboard shortcuts.
-    // Luckily, most key events include the "modifiers flag" information, that tells us which
-    // modifier keys were currently pressed at that time.
-    // We use this modifier flag information to detect "inconsistent" states to send the corresponding
-    // modifier release events, keeping espanso's state in sync.
-    // For more info, see:
-    // https://github.com/espanso/espanso/issues/825
-    // https://github.com/espanso/espanso/issues/858
-    let mut compensating_events = Vec::new();
-    if raw_event.event_type == INPUT_EVENT_TYPE_KEYBOARD {
-        let (key_code, _) = key_code_to_key(raw_event.key_code);
-        let mut current_mod_state = MODIFIER_STATE
-            .lock()
-            .expect("unable to acquire modifier state in cocoa detector");
-
-        if let Key::Alt = &key_code {
-            current_mod_state.is_option_down = raw_event.status == INPUT_STATUS_PRESSED;
-        } else if let Key::Meta = &key_code {
-            current_mod_state.is_command_down = raw_event.status == INPUT_STATUS_PRESSED;
-        } else if let Key::Shift = &key_code {
-            current_mod_state.is_shift_down = raw_event.status == INPUT_STATUS_PRESSED;
-        } else if let Key::Control = &key_code {
-            current_mod_state.is_ctrl_down = raw_event.status == INPUT_STATUS_PRESSED;
-        } else {
-            if current_mod_state.is_command_down && raw_event.is_command_pressed == 0 {
-                compensating_events.push((Key::Meta, 0x37));
-                current_mod_state.is_command_down = false;
-            }
-            if current_mod_state.is_ctrl_down && raw_event.is_control_pressed == 0 {
-                compensating_events.push((Key::Control, 0x3B));
-                current_mod_state.is_ctrl_down = false;
-            }
-            if current_mod_state.is_shift_down && raw_event.is_shift_pressed == 0 {
-                compensating_events.push((Key::Shift, 0x38));
-                current_mod_state.is_shift_down = false;
-            }
-            if current_mod_state.is_option_down && raw_event.is_option_pressed == 0 {
-                compensating_events.push((Key::Alt, 0x3A));
-                current_mod_state.is_option_down = false;
-            }
-        }
-    }
-
-    if !compensating_events.is_empty() {
-        warn!(
-            "detected inconsistent modifier state for keys {:?}, sending compensating events...",
-            compensating_events
-        );
-    }
-
-    if let Some(sender) = lock.as_ref() {
-        for (key, code) in compensating_events {
-            if let Err(error) = sender.send(InputEvent::Keyboard(KeyboardEvent {
-                key,
-                value: None,
-                status: Status::Released,
-                variant: None,
-                code,
-            })) {
-                error!(
-                    "Unable to send compensating event to Cocoa Sender: {}",
-                    error
-                );
-            }
-        }
-
-        let event: Option<InputEvent> = raw_event.into();
-        if let Some(event) = event {
-            if let Err(error) = sender.send(event) {
-                error!("Unable to send event to Cocoa Sender: {}", error);
-            }
-        } else {
-            trace!("Unable to convert raw event to input event");
-        }
-    } else {
-        warn!("Lost raw event, as Cocoa Sender is not available");
-    }
+    () /* ~ changed by cargo-mutants ~ */
 }
 
 pub struct CocoaSource {
     receiver: LazyCell<Receiver<InputEvent>>,
     hotkeys: Vec<HotKey>,
 }
 
 impl CocoaSource {


*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --no-run --verbose --package=espanso-detect@0.1.0
       Fresh unicode-ident v1.0.12
       Fresh cc v1.0.73
       Fresh autocfg v1.1.0
       Fresh cfg-if v1.0.0
       Fresh proc-macro2 v1.0.94
       Fresh cfg_aliases v0.2.1
       Fresh quote v1.0.35
       Fresh memchr v2.5.0
       Fresh anyhow v1.0.38
       Fresh libc v0.2.161
       Fresh log v0.4.14
warning: espanso-info@0.1.0: src/cocoa/native.mm:27:11: warning: variable 'result' set but not used [-Wunused-but-set-variable]
warning: espanso-info@0.1.0:    27 |   int32_t result = 0;
warning: espanso-info@0.1.0:       |           ^
warning: espanso-info@0.1.0: 1 warning generated.
       Fresh syn v2.0.100
       Fresh memoffset v0.9.1
       Fresh aho-corasick v0.7.19
       Fresh bitflags v2.4.1
       Fresh regex-syntax v0.6.27
       Fresh espanso-info v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-info)
       Fresh heck v0.4.1
       Fresh thiserror-impl v1.0.56
       Fresh regex v1.5.5
       Fresh nix v0.29.0
       Fresh lazycell v1.3.0
       Fresh enum-as-inner v0.6.0
warning: espanso-detect@0.1.0: src/mac/native.mm:143:51: warning: unused parameter '_next' [-Wunused-parameter]
warning: espanso-detect@0.1.0:   143 | OSStatus hotkey_event_handler(EventHandlerCallRef _next, EventRef evt, void *userData)
warning: espanso-detect@0.1.0:       |                                                   ^
warning: espanso-detect@0.1.0: 1 warning generated.
       Fresh thiserror v1.0.56
       Dirty espanso-detect v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-detect): the file `espanso-detect/src/mac/mod.rs` has changed (1745794185.320524492s, 19s after last build at 1745794166.193645372s)
   Compiling espanso-detect v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-detect)
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_detect --edition=2021 espanso-detect/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --test --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("sctk", "wayland"))' -C metadata=d768265830cbedbf -C extra-filename=-dfabb6a7ab5029ea --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rlib --extern enum_as_inner=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libenum_as_inner-25954b4b22c17fed.dylib --extern espanso_info=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libespanso_info-40685fd8c5738e82.rlib --extern lazycell=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblazycell-69a4db9f63905a25.rlib --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rlib --extern nix=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libnix-3e1336f5d2a0beb6.rlib --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rlib --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rlib -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/espanso-detect-a78a469d6111876a/out -l static=espansodetect -l c++ -l dylib=c++ -l static=espansodetect -l framework=Cocoa -l framework=Carbon -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/espanso-info-d416ef5810561be1/out`
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_detect --edition=2021 espanso-detect/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("sctk", "wayland"))' -C metadata=c5914c908036df0d -C extra-filename=-f8683c2b0513ec07 --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rmeta --extern espanso_info=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libespanso_info-40685fd8c5738e82.rmeta --extern lazycell=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblazycell-69a4db9f63905a25.rmeta --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rmeta --extern nix=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libnix-3e1336f5d2a0beb6.rmeta --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rmeta --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rmeta -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/espanso-detect-a78a469d6111876a/out -l static=espansodetect -l c++ -l dylib=c++ -l static=espansodetect -l framework=Cocoa -l framework=Carbon -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/espanso-info-d416ef5810561be1/out`
warning: unused import: `Status`
  --> espanso-detect/src/mac/mod.rs:33:65
   |
33 | use crate::event::{HotKeyEvent, InputEvent, Key, KeyboardEvent, Status, Variant};
   |                                                                 ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `raw_event`
   --> espanso-detect/src/mac/mod.rs:117:31
    |
117 | extern "C" fn native_callback(raw_event: RawInputEvent) {
    |                               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_raw_event`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: struct `ModifierState` is never constructed
   --> espanso-detect/src/mac/mod.rs:105:8
    |
105 | struct ModifierState {
    |        ^^^^^^^^^^^^^
    |
    = note: `ModifierState` has a derived impl for the trait `Default`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: static `MODIFIER_STATE` is never used
   --> espanso-detect/src/mac/mod.rs:114:8
    |
114 | static MODIFIER_STATE: LazyLock<Arc<Mutex<ModifierState>>> =
    |        ^^^^^^^^^^^^^^

warning: `espanso-detect` (lib) generated 4 warnings (run `cargo fix --lib -p espanso-detect` to apply 1 suggestion)
warning: `espanso-detect` (lib test) generated 4 warnings (4 duplicates)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.40s
  Executable `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_detect-dfabb6a7ab5029ea`

*** result: Success

*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --verbose --package=espanso-detect@0.1.0
       Fresh unicode-ident v1.0.12
       Fresh cc v1.0.73
       Fresh autocfg v1.1.0
       Fresh cfg_aliases v0.2.1
       Fresh cfg-if v1.0.0
       Fresh proc-macro2 v1.0.94
       Fresh quote v1.0.35
       Fresh memchr v2.5.0
       Fresh anyhow v1.0.38
       Fresh libc v0.2.161
warning: espanso-info@0.1.0: src/cocoa/native.mm:27:11: warning: variable 'result' set but not used [-Wunused-but-set-variable]
warning: espanso-info@0.1.0:    27 |   int32_t result = 0;
warning: espanso-info@0.1.0:       |           ^
warning: espanso-info@0.1.0: 1 warning generated.
       Fresh syn v2.0.100
       Fresh memoffset v0.9.1
       Fresh aho-corasick v0.7.19
       Fresh log v0.4.14
       Fresh regex-syntax v0.6.27
       Fresh bitflags v2.4.1
       Fresh lazycell v1.3.0
       Fresh heck v0.4.1
       Fresh thiserror-impl v1.0.56
       Fresh espanso-info v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-info)
       Fresh regex v1.5.5
       Fresh nix v0.29.0
       Fresh enum-as-inner v0.6.0
warning: espanso-detect@0.1.0: src/mac/native.mm:143:51: warning: unused parameter '_next' [-Wunused-parameter]
warning: espanso-detect@0.1.0:   143 | OSStatus hotkey_event_handler(EventHandlerCallRef _next, EventRef evt, void *userData)
warning: espanso-detect@0.1.0:       |                                                   ^
warning: espanso-detect@0.1.0: 1 warning generated.
       Fresh thiserror v1.0.56
warning: unused import: `Status`
  --> espanso-detect/src/mac/mod.rs:33:65
   |
33 | use crate::event::{HotKeyEvent, InputEvent, Key, KeyboardEvent, Status, Variant};
   |                                                                 ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `raw_event`
   --> espanso-detect/src/mac/mod.rs:117:31
    |
117 | extern "C" fn native_callback(raw_event: RawInputEvent) {
    |                               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_raw_event`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: struct `ModifierState` is never constructed
   --> espanso-detect/src/mac/mod.rs:105:8
    |
105 | struct ModifierState {
    |        ^^^^^^^^^^^^^
    |
    = note: `ModifierState` has a derived impl for the trait `Default`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: static `MODIFIER_STATE` is never used
   --> espanso-detect/src/mac/mod.rs:114:8
    |
114 | static MODIFIER_STATE: LazyLock<Arc<Mutex<ModifierState>>> =
    |        ^^^^^^^^^^^^^^

warning: `espanso-detect` (lib) generated 4 warnings (run `cargo fix --lib -p espanso-detect` to apply 1 suggestion)
warning: `espanso-detect` (lib test) generated 4 warnings (4 duplicates)
       Fresh espanso-detect v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-detect)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s
     Running `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_detect-dfabb6a7ab5029ea`

running 7 tests
test hotkey::tests::modifiers_detected_correcty ... ok
test mac::tests::raw_to_input_event_keyboard_works_correctly ... ok
test hotkey::tests::modifies_formatted_correctly ... ok
test mac::tests::raw_to_input_event_mouse_works_correctly ... ok
test hotkey::tests::parse_correctly ... ok
test hotkey::keys::tests::parse_invalid_keys ... ok
test hotkey::keys::tests::parse_works_correctly ... ok

test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests espanso_detect
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustdoc --edition=2021 --crate-type lib --color auto --crate-name espanso_detect --test espanso-detect/src/lib.rs --test-run-directory /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-detect -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/espanso-detect-a78a469d6111876a/out -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/espanso-info-d416ef5810561be1/out '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rlib --extern enum_as_inner=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libenum_as_inner-25954b4b22c17fed.dylib --extern espanso_detect=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libespanso_detect-f8683c2b0513ec07.rlib --extern espanso_info=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libespanso_info-40685fd8c5738e82.rlib --extern lazycell=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblazycell-69a4db9f63905a25.rlib --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rlib --extern nix=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libnix-3e1336f5d2a0beb6.rlib --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rlib --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rlib -C embed-bitcode=no --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("sctk", "wayland"))' --error-format human`

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


*** result: Success

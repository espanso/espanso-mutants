
*** espanso-render/src/renderer/resolve.rs:155:5: replace resolve_dependencies -> Result<()> with Ok(())

*** mutation diff:
--- espanso-render/src/renderer/resolve.rs
+++ replace resolve_dependencies -> Result<()> with Ok(())
@@ -147,57 +147,10 @@
 
 fn resolve_dependencies<'a>(
     node: &'a Node,
     node_map: &'a HashMap<&'a str, Node<'a>>,
     eval_order: &'a RefCell<Vec<&'a str>>,
     resolved: &'a RefCell<HashSet<&'a str>>,
     seen: &'a RefCell<HashSet<&'a str>>,
 ) -> Result<()> {
-    {
-        let mut seen_ref = seen.borrow_mut();
-        seen_ref.insert(node.name);
-    }
-
-    if let Some(dependencies) = &node.dependencies {
-        for dependency in dependencies {
-            let has_been_resolved = {
-                let resolved_ref = resolved.borrow();
-                resolved_ref.contains(dependency)
-            };
-            let has_been_seen = {
-                let seen_ref = seen.borrow();
-                seen_ref.contains(dependency)
-            };
-
-            if !has_been_resolved {
-                if has_been_seen {
-                    return Err(RendererError::CircularDependency(
-                        node.name.to_string(),
-                        (*dependency).to_string(),
-                    )
-                    .into());
-                }
-
-                if let Some(dependency_node) = node_map.get(dependency) {
-                    resolve_dependencies(dependency_node, node_map, eval_order, resolved, seen)?;
-                } else {
-                    error!("could not resolve variable {:?}", dependency);
-                    if let Some(variable) = &node.variable {
-                        if variable.var_type == "form" {
-                            super::log_new_form_syntax_tip();
-                        }
-                    }
-                    return Err(RendererError::MissingVariable((*dependency).to_string()).into());
-                }
-            }
-        }
-    }
-
-    {
-        let mut eval_order_ref = eval_order.borrow_mut();
-        eval_order_ref.push(node.name);
-        let mut resolved_ref = resolved.borrow_mut();
-        resolved_ref.insert(node.name);
-    }
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }


*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --no-run --verbose --package=espanso-render@0.1.0
       Fresh autocfg v1.1.0
       Fresh unicode-ident v1.0.12
       Fresh cfg-if v1.0.0
       Fresh cc v1.0.73
       Fresh libc v0.2.161
       Fresh cty v0.2.2
       Fresh proc-macro2 v1.0.94
       Fresh memchr v2.5.0
       Fresh getrandom v0.2.2
       Fresh ppv-lite86 v0.2.10
       Fresh quote v1.0.35
       Fresh rand_core v0.6.2
       Fresh num-traits v0.2.14
       Fresh aho-corasick v0.7.19
       Fresh cstr_core v0.2.5
       Fresh time v0.1.44
       Fresh pure-rust-locales v0.5.6
       Fresh syn v2.0.100
       Fresh rand_chacha v0.3.0
       Fresh num-integer v0.1.44
       Fresh regex-syntax v0.6.27
       Fresh heck v0.4.1
       Fresh log v0.4.14
       Fresh sys-locale v0.1.0
       Fresh anyhow v1.0.38
       Fresh thiserror-impl v1.0.56
       Fresh regex v1.5.5
       Fresh chrono v0.4.19
       Fresh rand v0.8.3
       Fresh enum-as-inner v0.6.0
       Fresh thiserror v1.0.56
       Dirty espanso-render v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-render): the file `espanso-render/src/renderer/resolve.rs` has changed (1745792324.384377759s, 2s after last build at 1745792322.042605950s)
   Compiling espanso-render v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-render)
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_render --edition=2021 espanso-render/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --test --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c81c20bf0fdc43c8 -C extra-filename=-fccf84fc568d8c0e --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rlib --extern chrono=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libchrono-6f9cf793b10dc916.rlib --extern enum_as_inner=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libenum_as_inner-25954b4b22c17fed.dylib --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rlib --extern rand=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/librand-42bce6490900a4d1.rlib --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rlib --extern sys_locale=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libsys_locale-293be0de6d288105.rlib --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rlib -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/sys-locale-deee3c14228b6d58/out`
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_render --edition=2021 espanso-render/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=8d5932f887fe267e -C extra-filename=-2109b9f3ff5e2e79 --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern anyhow=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libanyhow-0c628cd8133a8384.rmeta --extern chrono=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libchrono-6f9cf793b10dc916.rmeta --extern enum_as_inner=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libenum_as_inner-25954b4b22c17fed.dylib --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rmeta --extern rand=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/librand-42bce6490900a4d1.rmeta --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rmeta --extern sys_locale=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libsys_locale-293be0de6d288105.rmeta --extern thiserror=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libthiserror-dacb47178848b153.rmeta -L native=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/build/sys-locale-deee3c14228b6d58/out`
warning: unused import: `log::error`
  --> espanso-render/src/renderer/resolve.rs:26:5
   |
26 | use log::error;
   |     ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `super::RendererError`
  --> espanso-render/src/renderer/resolve.rs:30:5
   |
30 | use super::RendererError;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `node`
   --> espanso-render/src/renderer/resolve.rs:149:5
    |
149 |     node: &'a Node,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_node`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `node_map`
   --> espanso-render/src/renderer/resolve.rs:150:5
    |
150 |     node_map: &'a HashMap<&'a str, Node<'a>>,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_node_map`

warning: unused variable: `eval_order`
   --> espanso-render/src/renderer/resolve.rs:151:5
    |
151 |     eval_order: &'a RefCell<Vec<&'a str>>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_eval_order`

warning: unused variable: `resolved`
   --> espanso-render/src/renderer/resolve.rs:152:5
    |
152 |     resolved: &'a RefCell<HashSet<&'a str>>,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_resolved`

warning: unused variable: `seen`
   --> espanso-render/src/renderer/resolve.rs:153:5
    |
153 |     seen: &'a RefCell<HashSet<&'a str>>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_seen`

warning: variant `CircularDependency` is never constructed
   --> espanso-render/src/renderer/mod.rs:254:5
    |
246 | pub enum RendererError {
    |          ------------- variant in this enum
...
254 |     CircularDependency(String, String),
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `RendererError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: field `dependencies` is never read
  --> espanso-render/src/renderer/resolve.rs:35:5
   |
32 | struct Node<'a> {
   |        ---- field in this struct
...
35 |     dependencies: Option<HashSet<&'a str>>,
   |     ^^^^^^^^^^^^

warning: `espanso-render` (lib) generated 9 warnings (run `cargo fix --lib -p espanso-render` to apply 2 suggestions)
warning: `espanso-render` (lib test) generated 9 warnings (9 duplicates)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.54s
  Executable `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_render-fccf84fc568d8c0e`

*** result: Success

*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --verbose --package=espanso-render@0.1.0
       Fresh autocfg v1.1.0
       Fresh unicode-ident v1.0.12
       Fresh cfg-if v1.0.0
       Fresh cc v1.0.73
       Fresh libc v0.2.161
       Fresh proc-macro2 v1.0.94
       Fresh memchr v2.5.0
       Fresh getrandom v0.2.2
       Fresh cty v0.2.2
       Fresh ppv-lite86 v0.2.10
       Fresh time v0.1.44
       Fresh quote v1.0.35
       Fresh num-traits v0.2.14
       Fresh rand_core v0.6.2
       Fresh cstr_core v0.2.5
       Fresh aho-corasick v0.7.19
       Fresh pure-rust-locales v0.5.6
       Fresh syn v2.0.100
       Fresh num-integer v0.1.44
       Fresh rand_chacha v0.3.0
       Fresh heck v0.4.1
       Fresh regex-syntax v0.6.27
       Fresh anyhow v1.0.38
       Fresh log v0.4.14
       Fresh sys-locale v0.1.0
       Fresh thiserror-impl v1.0.56
       Fresh regex v1.5.5
       Fresh enum-as-inner v0.6.0
       Fresh chrono v0.4.19
       Fresh rand v0.8.3
       Fresh thiserror v1.0.56
warning: unused import: `log::error`
  --> espanso-render/src/renderer/resolve.rs:26:5
   |
26 | use log::error;
   |     ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `super::RendererError`
  --> espanso-render/src/renderer/resolve.rs:30:5
   |
30 | use super::RendererError;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `node`
   --> espanso-render/src/renderer/resolve.rs:149:5
    |
149 |     node: &'a Node,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_node`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `node_map`
   --> espanso-render/src/renderer/resolve.rs:150:5
    |
150 |     node_map: &'a HashMap<&'a str, Node<'a>>,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_node_map`

warning: unused variable: `eval_order`
   --> espanso-render/src/renderer/resolve.rs:151:5
    |
151 |     eval_order: &'a RefCell<Vec<&'a str>>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_eval_order`

warning: unused variable: `resolved`
   --> espanso-render/src/renderer/resolve.rs:152:5
    |
152 |     resolved: &'a RefCell<HashSet<&'a str>>,
    |     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_resolved`

warning: unused variable: `seen`
   --> espanso-render/src/renderer/resolve.rs:153:5
    |
153 |     seen: &'a RefCell<HashSet<&'a str>>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_seen`

warning: variant `CircularDependency` is never constructed
   --> espanso-render/src/renderer/mod.rs:254:5
    |
246 | pub enum RendererError {
    |          ------------- variant in this enum
...
254 |     CircularDependency(String, String),
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `RendererError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: field `dependencies` is never read
  --> espanso-render/src/renderer/resolve.rs:35:5
   |
32 | struct Node<'a> {
   |        ---- field in this struct
...
35 |     dependencies: Option<HashSet<&'a str>>,
   |     ^^^^^^^^^^^^

warning: `espanso-render` (lib) generated 9 warnings (run `cargo fix --lib -p espanso-render` to apply 2 suggestions)
warning: `espanso-render` (lib test) generated 9 warnings (9 duplicates)
       Fresh espanso-render v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-render)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s
     Running `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_render-fccf84fc568d8c0e`

running 53 tests
test extension::clipboard::tests::none_clipboard_produces_error ... ok
test extension::clipboard::tests::clipboard_works_correctly ... ok
test extension::echo::tests::alias ... ok
test extension::echo::tests::missing_echo_parameter ... ok
test extension::random::tests::missing_echo_parameter ... ok
test extension::echo::tests::echo_works_correctly ... ok
test extension::random::tests::random_works_correctly ... ok
test extension::date::tests::default_locale_works_correctly ... ok
test extension::date::tests::override_locale ... ok
test extension::date::tests::invalid_locale_should_default_to_en_us ... ok
test extension::date::tests::date_formatted_correctly ... ok
test extension::date::tests::offset_works_correctly ... ok
test extension::script::tests::basic ... ok
test extension::script::tests::invalid_command ... ok
test extension::script::tests::basic_no_trim ... ok
test extension::script::tests::ignore_error ... ok
test extension::script::tests::exit_error ... ok
test extension::util::tests::test_convert_to_env_variables ... ok
test extension::script::tests::var_injection ... ok
test renderer::tests::basic_variable ... FAILED
test renderer::tests::dict_variable_variable ... FAILED
test renderer::tests::escaped_variable_injection ... FAILED
test renderer::tests::extension_aborting_propagates ... FAILED
test renderer::tests::extension_error_propagates ... ok
test renderer::tests::global_dict_variable ... FAILED
test renderer::tests::global_variable ... FAILED
test renderer::tests::global_variable_depends_on ... FAILED
test renderer::tests::global_variable_explicit_ordering ... FAILED
test renderer::tests::disable_variable_injection ... FAILED
test renderer::tests::missing_nested_match ... ok
test renderer::tests::local_variable_explicit_ordering ... FAILED
test renderer::tests::missing_variable ... ok
test renderer::tests::nested_global_variable ... FAILED
test renderer::tests::nested_global_variable_circular_dependency_should_fail ... ok
test renderer::tests::nested_match ... FAILED
test renderer::tests::no_variable_capitalize ... ok
test renderer::tests::no_variable_no_styling ... ok
test renderer::tests::no_variable_uppercase ... ok
test renderer::tests::variable_escape ... ok
test renderer::tests::variable_injection ... FAILED
test renderer::tests::variable_injection_local_var_takes_precedence_over_global ... FAILED
test renderer::tests::variable_injection_missing_var ... ok
test renderer::tests::variable_injection_with_global_variable ... FAILED
test renderer::util::tests::get_body_variable_names_multiple_vars ... ok
test renderer::util::tests::get_body_variable_names_no_vars ... ok
test renderer::util::tests::test_inject_variables_into_params ... ok
test renderer::tests::no_variable_capitalize_words ... ok
test extension::shell::tests::var_injection ... ok
test extension::shell::tests::shell_trimmed ... ok
test extension::shell::tests::invalid_command ... ok
test extension::shell::tests::exit_error ... ok
test extension::shell::tests::shell_not_trimmed ... ok
test extension::shell::tests::pipes ... ok

failures:

---- renderer::tests::basic_variable stdout ----

thread 'renderer::tests::basic_variable' panicked at espanso-render/src/renderer/mod.rs:392:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello world")
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- renderer::tests::dict_variable_variable stdout ----

thread 'renderer::tests::dict_variable_variable' panicked at espanso-render/src/renderer/mod.rs:414:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello dict")

---- renderer::tests::escaped_variable_injection stdout ----

thread 'renderer::tests::escaped_variable_injection' panicked at espanso-render/src/renderer/mod.rs:844:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello {{first}} two")

---- renderer::tests::extension_aborting_propagates stdout ----

thread 'renderer::tests::extension_aborting_propagates' panicked at espanso-render/src/renderer/mod.rs:727:9:
assertion failed: matches!(res, RenderResult::Aborted)

---- renderer::tests::global_dict_variable stdout ----

thread 'renderer::tests::global_dict_variable' panicked at espanso-render/src/renderer/mod.rs:470:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello dict")

---- renderer::tests::global_variable stdout ----

thread 'renderer::tests::global_variable' panicked at espanso-render/src/renderer/mod.rs:445:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello world")

---- renderer::tests::global_variable_depends_on stdout ----

thread 'renderer::tests::global_variable_depends_on' panicked at espanso-render/src/renderer/mod.rs:620:9:
assertion failed: matches!(res, RenderResult::Aborted)

---- renderer::tests::global_variable_explicit_ordering stdout ----

thread 'renderer::tests::global_variable_explicit_ordering' panicked at espanso-render/src/renderer/mod.rs:511:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello Bob Bob")

---- renderer::tests::disable_variable_injection stdout ----

thread 'renderer::tests::disable_variable_injection' panicked at espanso-render/src/renderer/mod.rs:815:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello {{first}} two")

---- renderer::tests::local_variable_explicit_ordering stdout ----

thread 'renderer::tests::local_variable_explicit_ordering' panicked at espanso-render/src/renderer/mod.rs:652:9:
assertion failed: matches!(res, RenderResult::Aborted)

---- renderer::tests::nested_global_variable stdout ----

thread 'renderer::tests::nested_global_variable' panicked at espanso-render/src/renderer/mod.rs:545:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello world")

---- renderer::tests::nested_match stdout ----

thread 'renderer::tests::nested_match' panicked at espanso-render/src/renderer/mod.rs:683:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello world")

---- renderer::tests::variable_injection stdout ----

thread 'renderer::tests::variable_injection' panicked at espanso-render/src/renderer/mod.rs:785:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello John Snow")

---- renderer::tests::variable_injection_local_var_takes_precedence_over_global stdout ----

thread 'renderer::tests::variable_injection_local_var_takes_precedence_over_global' panicked at espanso-render/src/renderer/mod.rs:946:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello local")

---- renderer::tests::variable_injection_with_global_variable stdout ----

thread 'renderer::tests::variable_injection_with_global_variable' panicked at espanso-render/src/renderer/mod.rs:902:9:
assertion failed: matches!(res, RenderResult::Success(str) if str == "hello global")


failures:
    renderer::tests::basic_variable
    renderer::tests::dict_variable_variable
    renderer::tests::disable_variable_injection
    renderer::tests::escaped_variable_injection
    renderer::tests::extension_aborting_propagates
    renderer::tests::global_dict_variable
    renderer::tests::global_variable
    renderer::tests::global_variable_depends_on
    renderer::tests::global_variable_explicit_ordering
    renderer::tests::local_variable_explicit_ordering
    renderer::tests::nested_global_variable
    renderer::tests::nested_match
    renderer::tests::variable_injection
    renderer::tests::variable_injection_local_var_takes_precedence_over_global
    renderer::tests::variable_injection_with_global_variable

test result: FAILED. 38 passed; 15 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.37s

error: test failed, to rerun pass `-p espanso-render --lib`

*** result: Failure(101)


*** espanso-match/src/rolling/tree.rs:56:9: replace MatcherTreeNode<Id>::from_matches -> MatcherTreeNode<Id> with MatcherTreeNode::from(Default::default())

*** mutation diff:
--- espanso-match/src/rolling/tree.rs
+++ replace MatcherTreeNode<Id>::from_matches -> MatcherTreeNode<Id> with MatcherTreeNode::from(Default::default())
@@ -48,21 +48,17 @@
     }
 }
 
 impl<Id> MatcherTreeNode<Id>
 where
     Id: Clone,
 {
     pub fn from_matches(matches: &[RollingMatch<Id>]) -> MatcherTreeNode<Id> {
-        let mut root = MatcherTreeNode::default();
-        for m in matches {
-            insert_items_recursively(m.id.clone(), &mut root, &m.items);
-        }
-        root
+        MatcherTreeNode::from(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 fn insert_items_recursively<Id>(id: Id, node: &mut MatcherTreeNode<Id>, items: &[RollingItem]) {
     if items.is_empty() {
         return;
     }
 


*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --no-run --verbose --package=espanso-match@0.1.0
       Fresh version_check v0.9.2
       Fresh regex-syntax v0.6.27
       Fresh cfg-if v1.0.0
       Fresh memchr v2.5.0
       Fresh aho-corasick v0.7.19
       Fresh log v0.4.14
       Fresh unicase v2.6.0
       Fresh regex v1.5.5
       Dirty espanso-match v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-match): stale, unknown reason
   Compiling espanso-match v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-match)
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_match --edition=2021 espanso-match/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=68155d0edef3b3b9 -C extra-filename=-ee826f5ca4fa053d --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rmeta --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rmeta --extern unicase=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libunicase-ecc9de5e4eac1ba6.rmeta`
     Running `/Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/rustc --crate-name espanso_match --edition=2021 espanso-match/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked '--warn=clippy::pedantic' '--deny=clippy::wildcard_imports' '--allow=clippy::used_underscore_binding' '--allow=clippy::unused_self' '--allow=clippy::unnecessary_wraps' '--allow=clippy::too_many_lines' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::similar_names' '--deny=clippy::semicolon_if_nothing_returned' '--allow=clippy::ptr_as_ptr' '--allow=clippy::no_effect_underscore_binding' '--allow=clippy::needless_pass_by_value' '--allow=clippy::must_use_candidate' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_panics_doc' '--allow=clippy::missing_errors_doc' '--allow=clippy::match_same_arms' '--allow=clippy::items_after_statements' '--deny=clippy::enum_glob_use' '--allow=clippy::cast_sign_loss' '--allow=clippy::cast_possible_wrap' '--allow=clippy::cast_possible_truncation' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::as_conversions' --test --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=276e2828d4f92be8 -C extra-filename=-95f43789b61ad67b --out-dir /private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps -C incremental=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/incremental -L dependency=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps --extern log=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/liblog-43fa8c102ec312ab.rlib --extern regex=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libregex-450b5e6da8c3698c.rlib --extern unicase=/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/libunicase-ecc9de5e4eac1ba6.rlib`
warning: unused variable: `matches`
  --> espanso-match/src/rolling/tree.rs:55:25
   |
55 |     pub fn from_matches(matches: &[RollingMatch<Id>]) -> MatcherTreeNode<Id> {
   |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: variants `Matches` and `Node` are never constructed
  --> espanso-match/src/rolling/tree.rs:28:5
   |
27 | pub(crate) enum MatcherTreeRef<Id> {
   |                 -------------- variants in this enum
28 |     Matches(Vec<Id>),
   |     ^^^^^^^
29 |     Node(Box<MatcherTreeNode<Id>>),
   |     ^^^^
   |
   = note: `MatcherTreeRef` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: function `insert_items_recursively` is never used
  --> espanso-match/src/rolling/tree.rs:60:4
   |
60 | fn insert_items_recursively<Id>(id: Id, node: &mut MatcherTreeNode<Id>, items: &[RollingItem]) {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: `espanso-match` (lib) generated 3 warnings
warning: function `insert_items_recursively` is never used
  --> espanso-match/src/rolling/tree.rs:60:4
   |
60 | fn insert_items_recursively<Id>(id: Id, node: &mut MatcherTreeNode<Id>, items: &[RollingItem]) {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `espanso-match` (lib test) generated 2 warnings (1 duplicate)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.34s
  Executable `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_match-95f43789b61ad67b`

*** result: Success

*** /Users/aucamaillot/.rustup/toolchains/beta-aarch64-apple-darwin/bin/cargo test --verbose --package=espanso-match@0.1.0
       Fresh version_check v0.9.2
       Fresh cfg-if v1.0.0
       Fresh regex-syntax v0.6.27
       Fresh memchr v2.5.0
       Fresh aho-corasick v0.7.19
       Fresh log v0.4.14
       Fresh regex v1.5.5
       Fresh unicase v2.6.0
warning: unused variable: `matches`
  --> espanso-match/src/rolling/tree.rs:55:25
   |
55 |     pub fn from_matches(matches: &[RollingMatch<Id>]) -> MatcherTreeNode<Id> {
   |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_matches`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: variants `Matches` and `Node` are never constructed
  --> espanso-match/src/rolling/tree.rs:28:5
   |
27 | pub(crate) enum MatcherTreeRef<Id> {
   |                 -------------- variants in this enum
28 |     Matches(Vec<Id>),
   |     ^^^^^^^
29 |     Node(Box<MatcherTreeNode<Id>>),
   |     ^^^^
   |
   = note: `MatcherTreeRef` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: function `insert_items_recursively` is never used
  --> espanso-match/src/rolling/tree.rs:60:4
   |
60 | fn insert_items_recursively<Id>(id: Id, node: &mut MatcherTreeNode<Id>, items: &[RollingItem]) {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `insert_items_recursively` is never used
  --> espanso-match/src/rolling/tree.rs:60:4
   |
60 | fn insert_items_recursively<Id>(id: Id, node: &mut MatcherTreeNode<Id>, items: &[RollingItem]) {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: `espanso-match` (lib) generated 3 warnings
warning: `espanso-match` (lib test) generated 2 warnings (1 duplicate)
       Fresh espanso-match v0.1.0 (/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/espanso-match)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s
     Running `/private/var/folders/6f/_7411vhs4c58v7633qtsvlwc0000gn/T/cargo-mutants-espanso-jHWQVe.tmp/target/debug/deps/espanso_match-95f43789b61ad67b`

running 17 tests
test rolling::tests::test_match_from_string_base_case ... ok
test rolling::tests::test_match_from_string_case_insensitive ... ok
test rolling::tests::test_match_from_string_left_word ... ok
test rolling::matcher::tests::matcher_process_simple_strings ... FAILED
test rolling::matcher::tests::matcher_process_case_insensitive ... FAILED
test rolling::matcher::tests::matcher_process_word_matches ... FAILED
test rolling::tests::test_match_from_string_right_word ... ok
test rolling::tree::tests::generate_tree_from_items_keys ... FAILED
test rolling::tree::tests::generate_tree_from_items_mixed ... FAILED
test rolling::util::tests::extract_string_from_events_all_chars ... ok
test rolling::util::tests::extract_string_from_events_mixed ... ok
test rolling::tree::tests::generate_tree_from_items_simple_strings ... FAILED
test regex::tests::matcher_max_buffer_size ... ok
test regex::tests::matcher_simple_matches ... ok
test rolling::util::tests::extract_string_from_events_no_chars ... ok
test rolling::util::tests::extract_string_from_events_word_separators ... ok
test regex::tests::matcher_with_variables ... ok

failures:

---- rolling::matcher::tests::matcher_process_simple_strings stdout ----

thread 'rolling::matcher::tests::matcher_process_simple_strings' panicked at espanso-match/src/rolling/matcher.rs:253:9:
assertion `left == right` failed
  left: []
 right: [MatchResult { id: 1, trigger: "hi", left_separator: None, right_separator: None, vars: {} }, MatchResult { id: 5, trigger: "hi", left_separator: None, right_separator: None, vars: {} }]

---- rolling::matcher::tests::matcher_process_case_insensitive stdout ----

thread 'rolling::matcher::tests::matcher_process_case_insensitive' panicked at espanso-match/src/rolling/matcher.rs:329:9:
assertion `left == right` failed
  left: []
 right: [MatchResult { id: 1, trigger: "hi", left_separator: None, right_separator: None, vars: {} }]
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- rolling::matcher::tests::matcher_process_word_matches stdout ----

thread 'rolling::matcher::tests::matcher_process_word_matches' panicked at espanso-match/src/rolling/matcher.rs:291:9:
assertion `left == right` failed
  left: []
 right: [MatchResult { id: 1, trigger: "hi,", left_separator: None, right_separator: Some(","), vars: {} }]

---- rolling::tree::tests::generate_tree_from_items_keys stdout ----

thread 'rolling::tree::tests::generate_tree_from_items_keys' panicked at espanso-match/src/rolling/tree.rs:245:9:
assertion `left == right` failed
  left: MatcherTreeNode { word_separators: None, keys: [], chars: [], chars_insensitive: [] }
 right: MatcherTreeNode { word_separators: None, keys: [(ArrowUp, Node(MatcherTreeNode { word_separators: None, keys: [(ArrowLeft, Matches([1])), (ArrowRight, Matches([2]))], chars: [], chars_insensitive: [] }))], chars: [], chars_insensitive: [] }

---- rolling::tree::tests::generate_tree_from_items_mixed stdout ----

thread 'rolling::tree::tests::generate_tree_from_items_mixed' panicked at espanso-match/src/rolling/tree.rs:300:9:
assertion `left == right` failed
  left: MatcherTreeNode { word_separators: None, keys: [], chars: [], chars_insensitive: [] }
 right: MatcherTreeNode { word_separators: Some(Node(MatcherTreeNode { word_separators: None, keys: [], chars: [("m", Node(MatcherTreeNode { word_separators: None, keys: [], chars: [("y", Matches([2]))], chars_insensitive: [] })), ("h", Node(MatcherTreeNode { word_separators: None, keys: [], chars: [("i", Node(MatcherTreeNode { word_separators: Some(Matches([3])), keys: [], chars: [], chars_insensitive: [] }))], chars_insensitive: [] }))], chars_insensitive: [] })), keys: [(ArrowUp, Node(MatcherTreeNode { word_separators: None, keys: [(ArrowLeft, Matches([1]))], chars: [], chars_insensitive: [] }))], chars: [], chars_insensitive: [("n", Node(MatcherTreeNode { word_separators: None, keys: [], chars: [], chars_insensitive: [("o", Matches([4]))] }))] }

---- rolling::tree::tests::generate_tree_from_items_simple_strings stdout ----

thread 'rolling::tree::tests::generate_tree_from_items_simple_strings' panicked at espanso-match/src/rolling/tree.rs:190:9:
assertion `left == right` failed
  left: MatcherTreeNode { word_separators: None, keys: [], chars: [], chars_insensitive: [] }
 right: MatcherTreeNode { word_separators: None, keys: [], chars: [("h", Node(MatcherTreeNode { word_separators: None, keys: [], chars: [("i", Matches([1])), ("e", Node(MatcherTreeNode { word_separators: None, keys: [], chars: [("y", Matches([2]))], chars_insensitive: [] }))], chars_insensitive: [] })), ("m", Node(MatcherTreeNode { word_separators: None, keys: [], chars: [("y", Matches([3]))], chars_insensitive: [] }))], chars_insensitive: [] }


failures:
    rolling::matcher::tests::matcher_process_case_insensitive
    rolling::matcher::tests::matcher_process_simple_strings
    rolling::matcher::tests::matcher_process_word_matches
    rolling::tree::tests::generate_tree_from_items_keys
    rolling::tree::tests::generate_tree_from_items_mixed
    rolling::tree::tests::generate_tree_from_items_simple_strings

test result: FAILED. 11 passed; 6 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

error: test failed, to rerun pass `-p espanso-match --lib`

*** result: Failure(101)

--- espanso/src/cli/daemon/troubleshoot.rs
+++ replace load_config_or_troubleshoot_until_config_is_correct_or_abort -> Result<(ConfigLoadResult, Option<TroubleshootGuard>)> with Ok((Default::default(), None))
@@ -105,43 +105,10 @@
     }
 }
 
 pub fn load_config_or_troubleshoot_until_config_is_correct_or_abort(
     paths: &Paths,
     paths_overrides: &PathsOverrides,
     watcher_receiver: Receiver<()>,
 ) -> Result<(ConfigLoadResult, Option<TroubleshootGuard>)> {
-    let mut _troubleshoot_guard = None;
-
-    loop {
-        // If the loading process is fatal, we keep showing the troubleshooter until
-        // either the config is correct or the user aborts by closing the troubleshooter
-        _troubleshoot_guard = match load_config_or_troubleshoot(paths, paths_overrides) {
-            LoadResult::Correct(result) => return Ok((result, None)),
-            LoadResult::Warning(result, guard) => return Ok((result, guard)),
-            LoadResult::Fatal(guard) => Some(guard),
-        };
-
-        loop {
-            select! {
-              recv(watcher_receiver) -> _ => {
-                info!("config change detected, reloading configs...");
-
-                break
-              },
-              default(Duration::from_millis(500)) => {
-                if let Some(guard) = &mut _troubleshoot_guard {
-                  if let Ok(ended) = guard.try_wait() {
-                    if ended {
-                      bail!("user aborted troubleshooter");
-                    }
-                  } else {
-                    bail!("unable to wait for troubleshooter");
-                  }
-                } else {
-                  bail!("no troubleshoot guard found");
-                }
-              }
-            }
-        }
-    }
+    Ok((Default::default(), None)) /* ~ changed by cargo-mutants ~ */
 }

--- espanso/src/cli/env_path.rs
+++ replace env_path_main -> i32 with 0
@@ -29,38 +29,15 @@
         log_mode: super::LogMode::AppendOnly,
         subcommand: "env-path".to_string(),
         entry: env_path_main,
         ..Default::default()
     }
 }
 
 fn env_path_main(args: CliModuleArgs) -> i32 {
-    let cli_args = args.cli_args.expect("missing cli_args");
-
-    let elevated_priviledge_prompt = cli_args.is_present("prompt");
-
-    if cli_args.subcommand_matches("register").is_some() {
-        if let Err(error) = crate::path::add_espanso_to_path(elevated_priviledge_prompt) {
-            error_print_and_log(&format!(
-                "Unable to add 'espanso' command to PATH: {error:?}"
-            ));
-            return ADD_TO_PATH_FAILURE;
-        }
-    } else if cli_args.subcommand_matches("unregister").is_some() {
-        if let Err(error) = crate::path::remove_espanso_from_path(elevated_priviledge_prompt) {
-            error_print_and_log(&format!(
-                "Unable to remove 'espanso' command from PATH: {error:?}"
-            ));
-            return ADD_TO_PATH_FAILURE;
-        }
-    } else {
-        eprintln!("Please specify a subcommand, either `espanso env-path register` to add the 'espanso' command or `espanso env-path unregister` to remove it");
-        return ADD_TO_PATH_FAILURE;
-    }
-
-    ADD_TO_PATH_SUCCESS
+    0 /* ~ changed by cargo-mutants ~ */
 }
 
 fn error_print_and_log(msg: &str) {
     error!("{msg}");
     eprintln!("{msg}");
 }

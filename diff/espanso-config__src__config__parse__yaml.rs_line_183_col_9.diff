--- espanso-config/src/config/parse/yaml.rs
+++ replace <impl TryFrom<YAMLConfig> for ParsedConfig>::try_from -> Result<Self, Self::Error> with Ok(Default::default())
@@ -175,78 +175,17 @@
         Ok(serde_yaml::from_str(yaml)?)
     }
 }
 
 impl TryFrom<YAMLConfig> for ParsedConfig {
     type Error = anyhow::Error;
 
     fn try_from(yaml_config: YAMLConfig) -> Result<Self, Self::Error> {
-        Ok(Self {
-            label: yaml_config.label,
-            backend: yaml_config.backend,
-            enable: yaml_config.enable,
-            clipboard_threshold: yaml_config.clipboard_threshold,
-            auto_restart: yaml_config.auto_restart,
-            toggle_key: yaml_config.toggle_key,
-            preserve_clipboard: yaml_config.preserve_clipboard,
-            paste_shortcut: yaml_config.paste_shortcut,
-            disable_x11_fast_inject: yaml_config.disable_x11_fast_inject,
-            inject_delay: yaml_config.inject_delay,
-            key_delay: yaml_config.key_delay.or(yaml_config.backspace_delay),
-            evdev_modifier_delay: yaml_config.evdev_modifier_delay,
-            word_separators: yaml_config.word_separators,
-            backspace_limit: yaml_config.backspace_limit,
-            apply_patch: yaml_config.apply_patch,
-            keyboard_layout: yaml_config.keyboard_layout.map(|mapping| {
-                mapping
-                    .into_iter()
-                    .filter_map(|(key, value)| {
-                        if let (Some(key), Some(value)) = (key.as_str(), value.as_str()) {
-                            Some((key.to_string(), value.to_string()))
-                        } else {
-                            None
-                        }
-                    })
-                    .collect()
-            }),
-            search_trigger: yaml_config.search_trigger,
-            search_shortcut: yaml_config.search_shortcut,
-            undo_backspace: yaml_config.undo_backspace,
-
-            show_icon: yaml_config.show_icon,
-            show_notifications: yaml_config.show_notifications,
-            secure_input_notification: yaml_config.secure_input_notification,
-
-            pre_paste_delay: yaml_config.pre_paste_delay,
-            restore_clipboard_delay: yaml_config.restore_clipboard_delay,
-            paste_shortcut_event_delay: yaml_config.paste_shortcut_event_delay,
-            post_form_delay: yaml_config.post_form_delay,
-            max_form_width: yaml_config.max_form_width,
-            max_form_height: yaml_config.max_form_height,
-            post_search_delay: yaml_config.post_search_delay,
-
-            emulate_alt_codes: yaml_config.emulate_alt_codes,
-
-            win32_exclude_orphan_events: yaml_config.win32_exclude_orphan_events,
-            win32_keyboard_layout_cache_interval: yaml_config.win32_keyboard_layout_cache_interval,
-            x11_use_xclip_backend: yaml_config.x11_use_xclip_backend,
-            x11_use_xdotool_backend: yaml_config.x11_use_xdotool_backend,
-
-            use_standard_includes: yaml_config.use_standard_includes,
-            includes: yaml_config.includes,
-            extra_includes: yaml_config.extra_includes,
-            excludes: yaml_config.excludes,
-            extra_excludes: yaml_config.extra_excludes,
-
-            filter_class: yaml_config.filter_class,
-            filter_exec: yaml_config.filter_exec,
-            filter_os: yaml_config.filter_os,
-            filter_title: yaml_config.filter_title,
-        })
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[cfg(test)]
 mod tests {
     use super::*;
     use std::{collections::BTreeMap, convert::TryInto};
 

--- espanso/src/gui/modulo/form.rs
+++ replace <impl FormUI for ModuloFormUI<'_>>::show -> anyhow::Result<Option<HashMap<String, String>>> with Ok(Some(HashMap::new()))
@@ -50,48 +50,17 @@
 }
 
 impl FormUI for ModuloFormUI<'_> {
     fn show(
         &self,
         layout: &str,
         fields: &HashMap<String, FormField>,
     ) -> anyhow::Result<Option<HashMap<String, String>>> {
-        let modulo_form_config = ModuloFormConfig {
-            title: "espanso",
-            layout,
-            fields: convert_fields_into_object(fields),
-            max_form_width: self.option_provider.get_max_form_width(),
-            max_form_height: self.option_provider.get_max_form_height(),
-        };
-
-        let json_config = serde_json::to_string(&modulo_form_config)?;
-        let output = self
-            .manager
-            .invoke(&["form", "-j", "-i", "-"], &json_config)?;
-        let json: Result<HashMap<String, String>, _> = serde_json::from_str(&output);
-        let result = match json {
-            Ok(json) => {
-                if json.is_empty() {
-                    Ok(None)
-                } else {
-                    Ok(Some(json))
-                }
-            }
-            Err(error) => Err(error.into()),
-        };
-
-        let post_form_delay = self.option_provider.get_post_form_delay();
-        if post_form_delay > 0 {
-            std::thread::sleep(std::time::Duration::from_millis(
-                post_form_delay.try_into().unwrap(),
-            ));
-        }
-
-        result
+        Ok(Some(HashMap::new())) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[derive(Debug, Serialize)]
 struct ModuloFormConfig<'a> {
     title: &'a str,
     layout: &'a str,
     fields: Map<String, Value>,

--- espanso/src/cli/match_cli/list.rs
+++ replace print_matches_as_plain -> Result<()> with Ok(())
@@ -49,49 +49,17 @@
     Ok(())
 }
 
 pub fn print_matches_as_plain(
     match_list: &[&Match],
     only_triggers: bool,
     preserve_newlines: bool,
 ) -> Result<()> {
-    for m in match_list {
-        let triggers = match &m.cause {
-            MatchCause::None => vec!["(none)".to_string()],
-            MatchCause::Trigger(trigger_cause) => trigger_cause.triggers.clone(),
-            MatchCause::Regex(regex_cause) => vec![regex_cause.regex.clone()],
-        };
-
-        for trigger in triggers {
-            if only_triggers {
-                println!("{trigger}");
-            } else {
-                let description = m.description();
-                if let Some(label) = &m.label {
-                    if preserve_newlines {
-                        println!("{trigger} - {description} - {label}");
-                    } else {
-                        println!(
-                            "{} - {} - {}",
-                            trigger,
-                            description.replace('\n', " "),
-                            label
-                        );
-                    }
-                } else if preserve_newlines {
-                    println!("{trigger} - {description}");
-                } else {
-                    println!("{} - {}", trigger, description.replace('\n', " "));
-                }
-            }
-        }
-    }
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 #[derive(Debug, Serialize)]
 struct JsonMatchEntry {
     triggers: Vec<String>,
     replace: String,
     label: Option<String>,
 }

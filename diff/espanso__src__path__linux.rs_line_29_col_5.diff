--- espanso/src/path/linux.rs
+++ replace add_espanso_to_path -> Result<()> with Ok(())
@@ -21,30 +21,17 @@
 use std::path::PathBuf;
 use thiserror::Error;
 
 pub fn is_espanso_in_path() -> bool {
     PathBuf::from("/usr/local/bin/espanso").is_file()
 }
 
 pub fn add_espanso_to_path(_: bool) -> Result<()> {
-    let target_link_dir = PathBuf::from("/usr/local/bin");
-    let exec_path = get_binary_path()?;
-
-    if !target_link_dir.is_dir() {
-        return Err(PathError::UsrLocalBinDirDoesNotExist.into());
-    }
-
-    let target_link_path = target_link_dir.join("espanso");
-
-    if let Err(error) = std::os::unix::fs::symlink(exec_path, target_link_path) {
-        return Err(PathError::SymlinkError(error).into());
-    }
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 pub fn remove_espanso_from_path(_: bool) -> Result<()> {
     let target_link_path = PathBuf::from("/usr/local/bin/espanso");
 
     if std::fs::symlink_metadata(&target_link_path).is_err() {
         return Err(PathError::SymlinkNotFound.into());
     }

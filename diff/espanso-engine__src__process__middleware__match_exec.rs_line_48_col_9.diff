--- espanso-engine/src/process/middleware/match_exec.rs
+++ replace <impl Middleware for MatchExecRequestMiddleware<'_>>::next -> Event with Default::default()
@@ -40,39 +40,11 @@
 }
 
 impl Middleware for MatchExecRequestMiddleware<'_> {
     fn name(&self) -> &'static str {
         "match_exec_request"
     }
 
     fn next(&self, event: Event, _: &mut dyn FnMut(Event)) -> Event {
-        if let EventType::MatchExecRequest(m_event) = &event.etype {
-            let mut matches = if let Some(trigger) = &m_event.trigger {
-                self.match_resolver.find_matches_from_trigger(trigger)
-            } else {
-                Vec::new()
-            };
-
-            // Inject the request args into the detected matches
-            for m in &mut matches {
-                for (key, value) in &m_event.args {
-                    m.args.insert(key.to_string(), value.to_string());
-                }
-            }
-
-            if matches.is_empty() {
-                warn!("received match exec request, but no matches have been found for the given query.");
-                return Event::caused_by(event.source_id, EventType::NOOP);
-            }
-
-            return Event::caused_by(
-                event.source_id,
-                EventType::MatchesDetected(MatchesDetectedEvent {
-                    matches,
-                    is_search: false,
-                }),
-            );
-        }
-
-        event
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 }

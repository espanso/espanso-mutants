--- espanso-detect/src/evdev/mod.rs
+++ replace match guard with false
@@ -215,17 +215,17 @@
                 }
                 error!("Could not poll for events, {}", unsafe { *errno_ptr });
                 return Err(EVDEVSourceError::Internal().into());
             }
 
             for ev in evs.iter().take(ret as usize) {
                 let device = &self.devices[ev.u64 as usize];
                 match device.read() {
-                    Ok(events) if !events.is_empty() => {
+                    Ok(events) if false /* ~ changed by cargo-mutants ~ */ => {
                         // Convert raw events to the common format and invoke the callback
                         for raw_event in events {
                             let event: Option<InputEvent> = raw_event.into();
                             if let Some(event) = event {
                                 // On Wayland we need to detect the global shortcuts manually
                                 if let InputEvent::Keyboard(key_event) = &event {
                                     if let Some(hotkey) = (*hotkey_filter).process_event(key_event)
                                     {

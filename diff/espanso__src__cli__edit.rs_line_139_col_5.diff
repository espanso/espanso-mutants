--- espanso/src/cli/edit.rs
+++ replace determine_target_path -> PathBuf with Default::default()
@@ -131,37 +131,17 @@
 
     //   restart_espanso(&paths_overrides).expect("unable to restart espanso");
     // }
 
     0
 }
 
 fn determine_target_path(config_path: &Path, target_file: Option<&str>) -> PathBuf {
-    if let Some(target_file) = target_file {
-        match target_file {
-            "default" => config_path.join("config").join("default.yml"),
-            "base" => config_path.join("match").join("base.yml"),
-            custom => {
-                if !std::path::Path::new(custom)
-                    .extension()
-                    .is_some_and(|ext| ext.eq_ignore_ascii_case("yml"))
-                    && !std::path::Path::new(custom)
-                        .extension()
-                        .is_some_and(|ext| ext.eq_ignore_ascii_case("yaml"))
-                {
-                    config_path.join("match").join(format!("{custom}.yml"))
-                } else {
-                    config_path.join(custom)
-                }
-            }
-        }
-    } else {
-        config_path.join("match").join("base.yml")
-    }
+    Default::default() /* ~ changed by cargo-mutants ~ */
 }
 
 pub fn open_editor(file_path: &Path) -> bool {
     // Check if another editor is defined in the environment variables
     let editor_var = std::env::var_os("EDITOR");
     let visual_var = std::env::var_os("VISUAL");
 
     // Prioritize the editors specified by the environment variable, use the default one

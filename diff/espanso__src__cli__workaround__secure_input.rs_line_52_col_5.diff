--- espanso/src/cli/workaround/secure_input.rs
+++ replace execute_secure_input_workaround -> Result<()> with Ok(())
@@ -44,66 +44,17 @@
     }
 
     execute_secure_input_workaround()?;
     let _ = run_apple_script(SUCCESS_DIALOG_SCRIPT);
     Ok(())
 }
 
 fn execute_secure_input_workaround() -> Result<()> {
-    println!(
-        "Secure input is enabled. Our guess is that it was activated by '{}',",
-        espanso_mac_utils::get_secure_input_application()
-            .map(|entry| entry.0)
-            .unwrap_or_default()
-    );
-    println!("so restarting that application could solve the problem.");
-    println!();
-    println!("Unfortunately, that guess might be wrong if SecureInput was activated by");
-    println!("the application while in the background.");
-    println!();
-    println!("This workaround will attempt to execute a series of known actions that often");
-    println!("help in disabling secure input.");
-
-    let running_apps = get_running_apps()?;
-
-    if running_apps.contains("com.google.Chrome") {
-        println!("-> Running chrome defocusing workaround");
-        if let Err(err) = run_apple_script(BLUR_CHROME_WINDOWS_SCRIPT) {
-            eprintln!("unable to run chrome defocusing workaround: {err}");
-        }
-
-        if espanso_mac_utils::get_secure_input_pid().is_none() {
-            return Ok(());
-        }
-    }
-
-    if running_apps.contains("com.bitwarden.desktop") {
-        println!("-> Focusing/Defocusing on Bitwarden");
-        if let Err(err) = run_apple_script(FOCUS_BITWARDEN_SCRIPT) {
-            eprintln!("unable to run bitwarden defocusing workaround: {err}");
-        }
-
-        if espanso_mac_utils::get_secure_input_pid().is_none() {
-            return Ok(());
-        }
-    }
-
-    // Ask the user if he wants to try locking the screen
-    if run_apple_script(SECURE_INPUT_ASK_LOCK_SCREEN_SCRIPT)?.trim() == "yes" {
-        if let Err(err) = lock_screen() {
-            eprintln!("failed to lock the screen: {err}");
-        }
-    }
-
-    if espanso_mac_utils::get_secure_input_pid().is_some() {
-        bail!("failed to release secure input");
-    }
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 fn run_apple_script(script: &str) -> Result<String> {
     let mut child = Command::new("osascript")
         .arg("-")
         .stdin(Stdio::piped())
         .stdout(Stdio::piped())
         .spawn()?;

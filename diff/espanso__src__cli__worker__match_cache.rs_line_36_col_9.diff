--- espanso/src/cli/worker/match_cache.rs
+++ replace MatchCache<'a>::load -> Self with Default::default()
@@ -28,26 +28,17 @@
 use super::{builtin::BuiltInMatch, engine::process::middleware::match_select::MatchSummary};
 
 pub struct MatchCache<'a> {
     cache: HashMap<i32, &'a Match>,
 }
 
 impl<'a> MatchCache<'a> {
     pub fn load(config_store: &'a dyn ConfigStore, match_store: &'a dyn MatchStore) -> Self {
-        let mut cache = HashMap::new();
-
-        let paths = config_store.get_all_match_paths();
-        let global_set = match_store.query(&paths.into_iter().collect::<Vec<_>>());
-
-        for m in global_set.matches {
-            cache.insert(m.id, m);
-        }
-
-        Self { cache }
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 
     fn ids(&self) -> Vec<i32> {
         self.cache.keys().copied().collect()
     }
 }
 
 impl<'a> super::engine::process::middleware::render::MatchProvider<'a> for MatchCache<'a> {

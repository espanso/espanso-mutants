--- espanso-detect/src/hotkey/keys.rs
+++ replace <impl Display for ShortcutKey>::fmt -> std::fmt::Result with Ok(Default::default())
@@ -120,101 +120,17 @@
     Numpad9,
 
     // Specify the raw platform-specific virtual key code.
     Raw(u32),
 }
 
 impl Display for ShortcutKey {
     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
-        match *self {
-            ShortcutKey::Alt => write!(f, "ALT"),
-            ShortcutKey::Control => write!(f, "CTRL"),
-            ShortcutKey::Meta => write!(f, "META"),
-            ShortcutKey::Shift => write!(f, "SHIFT"),
-            ShortcutKey::Enter => write!(f, "ENTER"),
-            ShortcutKey::Tab => write!(f, "TAB"),
-            ShortcutKey::Space => write!(f, "SPACE"),
-            ShortcutKey::Insert => write!(f, "INSERT"),
-            ShortcutKey::ArrowDown => write!(f, "DOWN"),
-            ShortcutKey::ArrowLeft => write!(f, "LEFT"),
-            ShortcutKey::ArrowRight => write!(f, "RIGHT"),
-            ShortcutKey::ArrowUp => write!(f, "UP"),
-            ShortcutKey::End => write!(f, "END"),
-            ShortcutKey::Home => write!(f, "HOME"),
-            ShortcutKey::PageDown => write!(f, "PAGEDOWN"),
-            ShortcutKey::PageUp => write!(f, "PAGEUP"),
-            ShortcutKey::F1 => write!(f, "F1"),
-            ShortcutKey::F2 => write!(f, "F2"),
-            ShortcutKey::F3 => write!(f, "F3"),
-            ShortcutKey::F4 => write!(f, "F4"),
-            ShortcutKey::F5 => write!(f, "F5"),
-            ShortcutKey::F6 => write!(f, "F6"),
-            ShortcutKey::F7 => write!(f, "F7"),
-            ShortcutKey::F8 => write!(f, "F8"),
-            ShortcutKey::F9 => write!(f, "F9"),
-            ShortcutKey::F10 => write!(f, "F10"),
-            ShortcutKey::F11 => write!(f, "F11"),
-            ShortcutKey::F12 => write!(f, "F12"),
-            ShortcutKey::F13 => write!(f, "F13"),
-            ShortcutKey::F14 => write!(f, "F14"),
-            ShortcutKey::F15 => write!(f, "F15"),
-            ShortcutKey::F16 => write!(f, "F16"),
-            ShortcutKey::F17 => write!(f, "F17"),
-            ShortcutKey::F18 => write!(f, "F18"),
-            ShortcutKey::F19 => write!(f, "F19"),
-            ShortcutKey::F20 => write!(f, "F20"),
-            ShortcutKey::A => write!(f, "A"),
-            ShortcutKey::B => write!(f, "B"),
-            ShortcutKey::C => write!(f, "C"),
-            ShortcutKey::D => write!(f, "D"),
-            ShortcutKey::E => write!(f, "E"),
-            ShortcutKey::F => write!(f, "F"),
-            ShortcutKey::G => write!(f, "G"),
-            ShortcutKey::H => write!(f, "H"),
-            ShortcutKey::I => write!(f, "I"),
-            ShortcutKey::J => write!(f, "J"),
-            ShortcutKey::K => write!(f, "K"),
-            ShortcutKey::L => write!(f, "L"),
-            ShortcutKey::M => write!(f, "M"),
-            ShortcutKey::N => write!(f, "N"),
-            ShortcutKey::O => write!(f, "O"),
-            ShortcutKey::P => write!(f, "P"),
-            ShortcutKey::Q => write!(f, "Q"),
-            ShortcutKey::R => write!(f, "R"),
-            ShortcutKey::S => write!(f, "S"),
-            ShortcutKey::T => write!(f, "T"),
-            ShortcutKey::U => write!(f, "U"),
-            ShortcutKey::V => write!(f, "V"),
-            ShortcutKey::W => write!(f, "W"),
-            ShortcutKey::X => write!(f, "X"),
-            ShortcutKey::Y => write!(f, "Y"),
-            ShortcutKey::Z => write!(f, "Z"),
-            ShortcutKey::N0 => write!(f, "0"),
-            ShortcutKey::N1 => write!(f, "1"),
-            ShortcutKey::N2 => write!(f, "2"),
-            ShortcutKey::N3 => write!(f, "3"),
-            ShortcutKey::N4 => write!(f, "4"),
-            ShortcutKey::N5 => write!(f, "5"),
-            ShortcutKey::N6 => write!(f, "6"),
-            ShortcutKey::N7 => write!(f, "7"),
-            ShortcutKey::N8 => write!(f, "8"),
-            ShortcutKey::N9 => write!(f, "9"),
-            ShortcutKey::Numpad0 => write!(f, "NUMPAD0"),
-            ShortcutKey::Numpad1 => write!(f, "NUMPAD1"),
-            ShortcutKey::Numpad2 => write!(f, "NUMPAD2"),
-            ShortcutKey::Numpad3 => write!(f, "NUMPAD3"),
-            ShortcutKey::Numpad4 => write!(f, "NUMPAD4"),
-            ShortcutKey::Numpad5 => write!(f, "NUMPAD5"),
-            ShortcutKey::Numpad6 => write!(f, "NUMPAD6"),
-            ShortcutKey::Numpad7 => write!(f, "NUMPAD7"),
-            ShortcutKey::Numpad8 => write!(f, "NUMPAD8"),
-            ShortcutKey::Numpad9 => write!(f, "NUMPAD9"),
-            ShortcutKey::Raw(code) => write!(f, "RAW({code})"),
-        }
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl ShortcutKey {
     pub fn parse(key: &str) -> Option<ShortcutKey> {
         let parsed = match key {
             "ALT" | "OPTION" => Some(ShortcutKey::Alt),
             "CTRL" => Some(ShortcutKey::Control),

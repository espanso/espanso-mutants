--- espanso/src/cli/worker/engine/funnel/detect.rs
+++ replace <impl funnel::Source<'a> for DetectSource>::receive -> Option<Event> with Some(Default::default())
@@ -33,44 +33,17 @@
 }
 
 impl<'a> funnel::Source<'a> for DetectSource {
     fn register(&'a self, select: &mut Select<'a>) -> usize {
         select.recv(&self.receiver)
     }
 
     fn receive(&self, op: SelectedOperation) -> Option<Event> {
-        let (input_event, source_id) = op
-            .recv(&self.receiver)
-            .expect("unable to select data from DetectSource receiver");
-        match input_event {
-            InputEvent::Keyboard(keyboard_event) => Some(Event {
-                source_id,
-                etype: EventType::Keyboard(KeyboardEvent {
-                    key: convert_to_engine_key(keyboard_event.key),
-                    value: keyboard_event.value,
-                    status: convert_to_engine_status(keyboard_event.status),
-                    variant: keyboard_event.variant.map(convert_to_engine_variant),
-                }),
-            }),
-            InputEvent::Mouse(mouse_event) => Some(Event {
-                source_id,
-                etype: EventType::Mouse(MouseEvent {
-                    status: convert_to_engine_status(mouse_event.status),
-                    button: convert_to_engine_mouse_button(mouse_event.button),
-                }),
-            }),
-            InputEvent::HotKey(hotkey_event) => Some(Event {
-                source_id,
-                etype: EventType::HotKey(HotKeyEvent {
-                    hotkey_id: hotkey_event.hotkey_id,
-                }),
-            }),
-            InputEvent::AllModifiersReleased => None,
-        }
+        Some(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 pub fn convert_to_engine_key(key: espanso_detect::event::Key) -> Key {
     match key {
         espanso_detect::event::Key::Alt => Key::Alt,
         espanso_detect::event::Key::CapsLock => Key::CapsLock,
         espanso_detect::event::Key::Control => Key::Control,

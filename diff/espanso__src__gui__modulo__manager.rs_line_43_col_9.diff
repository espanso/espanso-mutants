--- espanso/src/gui/modulo/manager.rs
+++ replace ModuloManager::spawn -> Result<()> with Ok(())
@@ -35,47 +35,17 @@
             warn!("this version of espanso doesn't come with modulo support, so graphical features (such as Forms and Search) might not be available");
             false
         };
 
         Self { is_support_enabled }
     }
 
     pub fn spawn(&self, args: &[&str], body: &str) -> Result<()> {
-        if self.is_support_enabled {
-            let exec_path = std::env::current_exe().expect("unable to obtain current exec path");
-            let mut command = Command::new(exec_path);
-            let mut full_args = vec!["modulo"];
-            full_args.extend(args);
-            command
-                .args(full_args)
-                .stdin(std::process::Stdio::piped())
-                .stdout(std::process::Stdio::piped())
-                .stderr(std::process::Stdio::piped());
-
-            crate::util::set_command_flags(&mut command);
-
-            let child = command.spawn();
-
-            match child {
-                Ok(mut child) => {
-                    if let Some(stdin) = child.stdin.as_mut() {
-                        match stdin.write_all(body.as_bytes()) {
-                            Ok(()) => Ok(()),
-                            Err(error) => Err(ModuloError::Error(error).into()),
-                        }
-                    } else {
-                        Err(ModuloError::StdinError.into())
-                    }
-                }
-                Err(error) => Err(ModuloError::Error(error).into()),
-            }
-        } else {
-            Err(ModuloError::MissingModulo.into())
-        }
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub fn invoke(&self, args: &[&str], body: &str) -> Result<String> {
         if self.is_support_enabled {
             let exec_path = std::env::current_exe().expect("unable to obtain current exec path");
             let mut command = Command::new(exec_path);
             let mut full_args = vec!["modulo"];
             full_args.extend(args);

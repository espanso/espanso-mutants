--- espanso/src/cli/worker/engine/process/middleware/matcher/convert.rs
+++ replace MatchConverter<'a>::get_hotkeys -> Vec<HotKey> with vec![]
@@ -98,33 +98,17 @@
                 matches.push(RegexMatch::new(m.id, &cause.regex));
             }
         }
 
         matches
     }
 
     pub fn get_hotkeys(&self) -> Vec<HotKey> {
-        let mut hotkeys = Vec::new();
-
-        // TODO: read user-defined matches
-
-        // Then convert built-in ones
-        for m in self.builtin_matches {
-            if let Some(hotkey) = &m.hotkey {
-                match HotKey::new(m.id, hotkey) {
-                    Ok(hotkey) => hotkeys.push(hotkey),
-                    Err(err) => {
-                        error!("unable to register hotkey: {}, with error: {}", hotkey, err);
-                    }
-                }
-            }
-        }
-
-        hotkeys
+        vec![] /* ~ changed by cargo-mutants ~ */
     }
 
     fn global_match_set(&self) -> MatchSet {
         let paths = self.config_store.get_all_match_paths();
         self.match_store
             .query(&paths.into_iter().collect::<Vec<_>>())
     }
 }

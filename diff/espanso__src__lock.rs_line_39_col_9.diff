--- espanso/src/lock.rs
+++ replace Lock::acquire -> Option<Lock> with None
@@ -31,31 +31,17 @@
 impl Lock {
     #[allow(dead_code)]
     pub fn release(self) -> Result<()> {
         fs2::FileExt::unlock(&self.lock_file)?;
         Ok(())
     }
 
     fn acquire(runtime_dir: &Path, name: &str) -> Option<Lock> {
-        let lock_file_path = runtime_dir.join(format!("{name}.lock"));
-        let lock_file = OpenOptions::new()
-            .read(true)
-            .write(true)
-            .create(true)
-            .truncate(true)
-            .open(&lock_file_path)
-            .unwrap_or_else(|_| {
-                panic!("unable to create reference to lock file: {lock_file_path:?}")
-            });
-        if lock_file.try_lock_exclusive().is_ok() {
-            Some(Lock { lock_file })
-        } else {
-            None
-        }
+        None /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl Drop for Lock {
     fn drop(&mut self) {
         fs2::FileExt::unlock(&self.lock_file)
             .unwrap_or_else(|_| panic!("unable to unlock lock_file: {:?}", self.lock_file));
     }

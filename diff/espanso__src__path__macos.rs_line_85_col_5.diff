--- espanso/src/path/macos.rs
+++ replace create_dir_and_link_with_applescript -> Result<()> with Ok(())
@@ -77,33 +77,17 @@
             }
         }
     }
 
     Ok(())
 }
 
 fn create_dir_and_link_with_applescript(exec_path: &Path, target_link_path: &Path) -> Result<()> {
-    let params = format!(
-        r#"do shell script "mkdir -p /usr/local/bin && ln -sf '{}' '{}'" with administrator privileges"#,
-        exec_path.to_string_lossy(),
-        target_link_path.to_string_lossy(),
-    );
-
-    let mut child = std::process::Command::new("osascript")
-        .args(["-e", &params])
-        .spawn()?;
-
-    let result = child.wait()?;
-
-    if !result.success() {
-        return Err(PathError::ElevationRequestFailure.into());
-    }
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 pub fn remove_espanso_from_path(prompt_when_necessary: bool) -> Result<()> {
     let target_link_path = PathBuf::from("/usr/local/bin/espanso");
 
     if std::fs::symlink_metadata(&target_link_path).is_err() {
         return Err(PathError::SymlinkNotFound.into());
     }

--- espanso/src/cli/service/stop.rs
+++ replace forcefully_terminate_espanso with ()
@@ -86,36 +86,10 @@
 
         std::thread::sleep(std::time::Duration::from_millis(200));
     }
 
     false
 }
 
 fn forcefully_terminate_espanso() {
-    let mut sys =
-        System::new_with_specifics(RefreshKind::new().with_processes(ProcessRefreshKind::new()));
-    sys.refresh_processes_specifics(ProcessRefreshKind::new());
-
-    let target_process_names = if cfg!(target_os = "windows") {
-        vec!["espanso.exe", "espansod.exe"]
-    } else {
-        vec!["espanso"]
-    };
-
-    let current_pid = std::process::id();
-
-    // We want to terminate all Espanso processes except this one
-    for (pid, process) in sys.processes() {
-        if target_process_names.contains(&process.name()) && pid.as_u32() != current_pid {
-            let str_pid = pid.as_u32().to_string();
-            info_println!("killing espanso process with PID: {}", str_pid);
-
-            if cfg!(target_os = "windows") {
-                let _ = Command::new("taskkill")
-                    .args(["/pid", &str_pid, "/f"])
-                    .output();
-            } else {
-                let _ = Command::new("kill").args(["-9", &str_pid]).output();
-            }
-        }
-    }
+    () /* ~ changed by cargo-mutants ~ */
 }

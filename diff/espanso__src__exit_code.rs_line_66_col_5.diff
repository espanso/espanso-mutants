--- espanso/src/exit_code.rs
+++ replace configure_custom_panic_hook with ()
@@ -58,39 +58,10 @@
 pub const PACKAGE_UPDATE_PARTIAL_FAILURE: i32 = 6;
 
 #[allow(dead_code)]
 pub const UNEXPECTED_RUN_AS_ROOT: i32 = 42;
 
 use crate::error_eprintln;
 
 pub fn configure_custom_panic_hook(fail_exit_code: i32) {
-    let previous_hook = std::panic::take_hook();
-    std::panic::set_hook(Box::new(move |info| {
-        (*previous_hook)(info);
-
-        // Part of this code is taken from the "rust-log-panics" crate
-        let thread = std::thread::current();
-        let thread = thread.name().unwrap_or("<unnamed>");
-
-        let msg = match info.payload().downcast_ref::<&'static str>() {
-            Some(s) => *s,
-            None => match info.payload().downcast_ref::<String>() {
-                Some(s) => &**s,
-                None => "Box<Any>",
-            },
-        };
-
-        if let Some(location) = info.location() {
-            error_eprintln!(
-                "ERROR: '{}' panicked at '{}': {}:{}",
-                thread,
-                msg,
-                location.file(),
-                location.line(),
-            );
-        } else {
-            error_eprintln!("ERROR: '{}' panicked at '{}'", thread, msg);
-        }
-
-        std::process::exit(fail_exit_code);
-    }));
+    () /* ~ changed by cargo-mutants ~ */
 }

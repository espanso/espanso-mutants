--- espanso-engine/src/process/middleware/image_resolve.rs
+++ replace <impl Middleware for ImageResolverMiddleware<'_>>::next -> Event with Default::default()
@@ -39,41 +39,11 @@
 }
 
 impl Middleware for ImageResolverMiddleware<'_> {
     fn name(&self) -> &'static str {
         "image_resolve"
     }
 
     fn next(&self, event: Event, _: &mut dyn FnMut(Event)) -> Event {
-        if let EventType::ImageRequested(m_event) = &event.etype {
-            // On Windows, we have to replace the forward / with the backslash \ in the path
-            let path = if cfg!(target_os = "windows") {
-                m_event.image_path.replace('/', "\\")
-            } else {
-                m_event.image_path.clone()
-            };
-
-            let path = if path.contains("$CONFIG") {
-                let config_path = match self.provider.get_config_path().canonicalize() {
-                    Ok(path) => path,
-                    Err(err) => {
-                        error!(
-                            "unable to canonicalize the config path into the image resolver: {}",
-                            err
-                        );
-                        self.provider.get_config_path().to_owned()
-                    }
-                };
-                path.replace("$CONFIG", &config_path.to_string_lossy())
-            } else {
-                path
-            };
-
-            return Event::caused_by(
-                event.source_id,
-                EventType::ImageResolved(ImageResolvedEvent { image_path: path }),
-            );
-        }
-
-        event
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 }

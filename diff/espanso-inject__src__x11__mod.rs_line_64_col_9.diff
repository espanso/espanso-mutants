--- espanso-inject/src/x11/mod.rs
+++ replace X11ProxyInjector::get_active_injector -> Result<&dyn Injector> with Ok(&Default::default())
@@ -56,34 +56,17 @@
 
         Ok(X11ProxyInjector {
             default_injector,
             xdotool_injector,
         })
     }
 
     fn get_active_injector(&self, options: &crate::InjectionOptions) -> Result<&dyn Injector> {
-        ensure!(
-            self.default_injector.is_some() || self.xdotool_injector.is_some(),
-            "unable to get active injector, neither default or xdotool fallback are available."
-        );
-
-        if options.x11_use_xdotool_fallback {
-            if let Some(xdotool_injector) = self.xdotool_injector.as_ref() {
-                return Ok(xdotool_injector);
-            } else if let Some(default_injector) = self.default_injector.as_ref() {
-                return Ok(default_injector);
-            }
-        } else if let Some(default_injector) = self.default_injector.as_ref() {
-            return Ok(default_injector);
-        } else if let Some(xdotool_injector) = self.xdotool_injector.as_ref() {
-            return Ok(xdotool_injector);
-        }
-
-        unreachable!()
+        Ok(&Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl Injector for X11ProxyInjector {
     fn send_string(&self, string: &str, options: crate::InjectionOptions) -> Result<()> {
         self.get_active_injector(&options)?
             .send_string(string, options)
     }

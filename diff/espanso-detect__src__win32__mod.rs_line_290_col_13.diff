--- espanso-detect/src/win32/mod.rs
+++ delete match arm
@@ -282,59 +282,17 @@
         let status = match raw.status {
             INPUT_STATUS_RELEASED => Released,
             INPUT_STATUS_PRESSED => Pressed,
             _ => Pressed,
         };
 
         match raw.event_type {
             // Keyboard events
-            INPUT_EVENT_TYPE_KEYBOARD => {
-                let (key, variant_hint) = key_code_to_key(raw.key_code);
-
-                // If the raw event does not include an explicit variant, use the hint provided by the key code
-                let variant = match raw.variant {
-                    INPUT_LEFT_VARIANT => Some(Left),
-                    INPUT_RIGHT_VARIANT => Some(Right),
-                    _ => variant_hint,
-                };
-
-                let value = if raw.buffer_len > 0 {
-                    let raw_string_result = U16CStr::from_slice_with_nul(&raw.buffer);
-                    match raw_string_result {
-                        Ok(c_string) => {
-                            let string_result = c_string.to_string();
-                            match string_result {
-                                Ok(value) => Some(value),
-                                Err(err) => {
-                                    warn!("Widechar conversion error: {}", err);
-                                    None
-                                }
-                            }
-                        }
-                        Err(err) => {
-                            warn!("Received malformed widechar: {}", err);
-                            None
-                        }
-                    }
-                } else {
-                    None
-                };
-
-                return Some(InputEvent::Keyboard(KeyboardEvent {
-                    key,
-                    value,
-                    status,
-                    variant,
-                    code: raw
-                        .key_code
-                        .try_into()
-                        .expect("unable to convert keycode to u32"),
-                }));
-            }
+             /* ~ changed by cargo-mutants ~ */
             // Mouse events
             INPUT_EVENT_TYPE_MOUSE => {
                 let button = raw_to_mouse_button(raw.key_code);
 
                 if let Some(button) = button {
                     return Some(InputEvent::Mouse(MouseEvent { button, status }));
                 }
             }

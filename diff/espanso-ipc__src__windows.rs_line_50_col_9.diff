--- espanso-ipc/src/windows.rs
+++ replace <impl IPCServer<Event> for WinIPCServer>::run -> anyhow::Result<()> with Ok(())
@@ -42,65 +42,17 @@
         info!("binded to named pipe: {}", pipe_name);
 
         Ok(Self { server })
     }
 }
 
 impl<Event: Send + Sync + DeserializeOwned + Serialize> IPCServer<Event> for WinIPCServer {
     fn run(mut self, handler: EventHandler<Event>) -> anyhow::Result<()> {
-        let server = self
-            .server
-            .take()
-            .expect("unable to extract IPC server handle");
-        let mut stream = server.wait()?;
-
-        loop {
-            // Read multiple commands from the client
-            loop {
-                match read_line(&mut stream) {
-                    Ok(Some(line)) => {
-                        let event: Result<Event, serde_json::Error> = serde_json::from_str(&line);
-                        match event {
-                            Ok(event) => match handler(event) {
-                                EventHandlerResponse::Response(response) => {
-                                    let mut json_event = serde_json::to_string(&response)?;
-                                    json_event.push('\n');
-                                    stream.write_all(json_event.as_bytes())?;
-                                    stream.flush()?;
-                                }
-                                EventHandlerResponse::NoResponse => {
-                                    // Async event, no need to reply
-                                }
-                                EventHandlerResponse::Error(err) => {
-                                    error!("ipc handler reported an error: {}", err);
-                                }
-                                EventHandlerResponse::Exit => {
-                                    return Ok(());
-                                }
-                            },
-                            Err(error) => {
-                                error!("received malformed event from ipc stream: {}", error);
-                                break;
-                            }
-                        }
-                    }
-                    Ok(None) => {
-                        // EOF reached
-                        break;
-                    }
-                    Err(error) => {
-                        error!("error reading ipc stream: {}", error);
-                        break;
-                    }
-                }
-            }
-
-            stream = stream.disconnect()?.wait()?;
-        }
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 pub struct WinIPCClient {
     stream: PipeClient,
 }
 
 impl WinIPCClient {

--- espanso-clipboard/src/wayland/fallback/mod.rs
+++ replace <impl Clipboard for WaylandFallbackClipboard>::get_text -> Option<String> with None
@@ -72,55 +72,17 @@
         Ok(Self {
             command_timeout: options.wayland_command_timeout_ms,
         })
     }
 }
 
 impl Clipboard for WaylandFallbackClipboard {
     fn get_text(&self, _: &ClipboardOperationOptions) -> Option<String> {
-        let timeout = std::time::Duration::from_millis(self.command_timeout);
-        match Command::new("wl-paste")
-            .arg("--no-newline")
-            .stdout(Stdio::piped())
-            .spawn()
-        {
-            Ok(mut child) => match child.wait_timeout(timeout) {
-                Ok(status_code) => {
-                    if let Some(status) = status_code {
-                        if status.success() {
-                            if let Some(mut io) = child.stdout {
-                                let mut output = Vec::new();
-                                io.read_to_end(&mut output).ok()?;
-                                Some(String::from_utf8_lossy(&output).to_string())
-                            } else {
-                                None
-                            }
-                        } else {
-                            error!("error, wl-paste exited with non-zero exit code");
-                            None
-                        }
-                    } else {
-                        error!("error, wl-paste has timed-out, killing the process");
-                        if child.kill().is_err() {
-                            error!("unable to kill wl-paste");
-                        }
-                        None
-                    }
-                }
-                Err(err) => {
-                    error!("error while executing 'wl-paste': {}", err);
-                    None
-                }
-            },
-            Err(err) => {
-                error!("could not invoke 'wl-paste': {}", err);
-                None
-            }
-        }
+        None /* ~ changed by cargo-mutants ~ */
     }
 
     fn set_text(&self, text: &str, _: &ClipboardOperationOptions) -> anyhow::Result<()> {
         self.invoke_command_with_timeout(&mut Command::new("wl-copy"), text.as_bytes(), "wl-copy")
     }
 
     fn set_image(
         &self,

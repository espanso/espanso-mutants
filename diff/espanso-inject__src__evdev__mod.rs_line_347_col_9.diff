--- espanso-inject/src/evdev/mod.rs
+++ replace <impl Injector for EVDEVInjector>::send_key_combination -> Result<()> with Ok(())
@@ -339,43 +339,17 @@
             }
         }
 
         Ok(())
     }
 
     fn send_key_combination(&self, keys: &[keys::Key], options: InjectionOptions) -> Result<()> {
         // Compute all the key record sequence first to make sure a mapping is available
-        let syms = convert_to_sym_array(keys)?;
-        let records = self.convert_to_record_array(&syms)?;
-
-        let delay_us = options.delay as u32 * 1000; // Convert to micro seconds
-
-        // First press the keys
-        for record in &records {
-            // Press the modifiers
-            for modifier in &record.modifiers {
-                self.send_key(*modifier, true, delay_us);
-            }
-
-            // Send the key
-            self.send_key(record.code, true, delay_us);
-        }
-
-        // Then release them
-        for record in records.iter().rev() {
-            self.send_key(record.code, false, delay_us);
-
-            // Release the modifiers
-            for modifier in &record.modifiers {
-                self.send_key(*modifier, false, delay_us);
-            }
-        }
-
-        Ok(())
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 #[derive(Error, Debug)]
 pub enum EVDEVInjectorError {
     #[error("missing vkey mapping for char `{0}`")]
     CharMappingFailure(String),
 

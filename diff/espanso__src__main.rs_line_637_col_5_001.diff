--- espanso/src/main.rs
+++ replace get_path_override -> Option<PathBuf> with None
@@ -629,28 +629,10 @@
         clap_instance
             .print_long_help()
             .expect("unable to print help");
         println!();
     }
 }
 
 fn get_path_override(matches: &ArgMatches, argument: &str, env_var: &str) -> Option<PathBuf> {
-    if let Some(path) = matches.value_of(argument) {
-        let path = PathBuf::from(path.trim());
-        if path.is_dir() {
-            Some(path)
-        } else {
-            error_eprintln!("{} argument was specified, but it doesn't point to a valid directory. Make sure to create it first.", argument);
-            std::process::exit(1);
-        }
-    } else if let Ok(path) = std::env::var(env_var) {
-        let path = PathBuf::from(path.trim());
-        if path.is_dir() {
-            Some(path)
-        } else {
-            error_eprintln!("{} env variable was specified, but it doesn't point to a valid directory. Make sure to create it first.", env_var);
-            std::process::exit(1);
-        }
-    } else {
-        None
-    }
+    None /* ~ changed by cargo-mutants ~ */
 }

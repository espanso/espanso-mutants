--- espanso-engine/src/process/middleware/delay_modifiers.rs
+++ replace <impl Middleware for DelayForModifierReleaseMiddleware<'_>>::next -> Event with Default::default()
@@ -47,32 +47,17 @@
 }
 
 impl Middleware for DelayForModifierReleaseMiddleware<'_> {
     fn name(&self) -> &'static str {
         "delay_modifiers"
     }
 
     fn next(&self, event: Event, _: &mut dyn FnMut(Event)) -> Event {
-        if is_injection_event(&event.etype) {
-            let start = Instant::now();
-            while self.provider.is_any_conflicting_modifier_pressed() {
-                if Instant::now().duration_since(start) > MODIFIER_DELAY_TIMEOUT {
-                    warn!("injection delay has timed out, please release the modifier keys (SHIFT, CTRL, ALT, CMD) to trigger an expansion");
-                    break;
-                }
-
-                // TODO: here we might show a popup window to tell the users to release those keys
-
-                trace!("delaying injection event as some modifiers are pressed");
-                std::thread::sleep(Duration::from_millis(100));
-            }
-        }
-
-        event
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 }
 
 fn is_injection_event(event_type: &EventType) -> bool {
     matches!(
         event_type,
         EventType::TriggerCompensation(_)
             | EventType::CursorHintCompensation(_)

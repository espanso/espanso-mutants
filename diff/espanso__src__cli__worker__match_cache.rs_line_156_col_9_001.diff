--- espanso/src/cli/worker/match_cache.rs
+++ replace <impl super::engine::process::middleware::multiplex::MatchProvider<'a> for CombinedMatchCache<'a>>::get -> Option<super::engine::process::middleware::multiplex::MatchResult<'a>> with None
@@ -148,24 +148,17 @@
 
 impl<'a> super::engine::process::middleware::multiplex::MatchProvider<'a>
     for CombinedMatchCache<'a>
 {
     fn get(
         &self,
         match_id: i32,
     ) -> Option<super::engine::process::middleware::multiplex::MatchResult<'a>> {
-        Some(match self.get(match_id)? {
-            MatchVariant::User(m) => {
-                super::engine::process::middleware::multiplex::MatchResult::User(m)
-            }
-            MatchVariant::Builtin(m) => {
-                super::engine::process::middleware::multiplex::MatchResult::Builtin(m)
-            }
-        })
+        None /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl espanso_engine::process::MatchProvider for CombinedMatchCache<'_> {
     fn get_all_matches_ids(&self) -> Vec<i32> {
         let mut ids: Vec<i32> = self.builtin_match_cache.keys().copied().collect();
         ids.extend(self.user_match_cache.ids());
         ids

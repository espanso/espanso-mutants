--- espanso-modulo/src/sys/form/mod.rs
+++ replace interop::<impl From<types::ChoiceMetadata> for OwnedChoiceMetadata>::from -> Self with Default::default()
@@ -288,45 +288,17 @@
     impl Interoperable for OwnedChoiceMetadata {
         fn as_ptr(&self) -> *const c_void {
             std::ptr::from_ref::<ChoiceMetadata>(&(*self.interop)) as *const c_void
         }
     }
 
     impl From<types::ChoiceMetadata> for OwnedChoiceMetadata {
         fn from(metadata: types::ChoiceMetadata) -> Self {
-            let values: Vec<CString> = metadata
-                .values
-                .into_iter()
-                .map(|value| CString::new(value).expect("unable to convert choice value to string"))
-                .collect();
-
-            let values_ptr_array: Vec<*const c_char> =
-                values.iter().map(|value| value.as_ptr()).collect();
-
-            let choice_type = match metadata.choice_type {
-                types::ChoiceType::Dropdown => ChoiceType_DROPDOWN,
-                types::ChoiceType::List => ChoiceType_LIST,
-            };
-
-            let default_value = CString::new(metadata.default_value)
-                .expect("unable to convert default value to CString");
-
-            let interop = Box::new(ChoiceMetadata {
-                values: values_ptr_array.as_ptr(),
-                valueSize: values.len() as c_int,
-                choiceType: choice_type,
-                defaultValue: default_value.as_ptr(),
-            });
-            Self {
-                values,
-                values_ptr_array,
-                default_value,
-                interop,
-            }
+            Default::default() /* ~ changed by cargo-mutants ~ */
         }
     }
 
     struct OwnedRowMetadata {
         fields: Vec<OwnedField>,
 
         metadata: Vec<FieldMetadata>,
         interop: Box<RowMetadata>,

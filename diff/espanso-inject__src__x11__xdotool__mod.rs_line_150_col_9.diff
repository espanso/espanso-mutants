--- espanso-inject/src/x11/xdotool/mod.rs
+++ replace X11XDOToolInjector::fast_send_string -> anyhow::Result<()> with Ok(())
@@ -142,31 +142,17 @@
         string: &str,
         options: crate::InjectionOptions,
     ) -> anyhow::Result<()> {
         // It may happen that when an expansion is triggered, some keys are still pressed.
         // This causes a problem if the expanded match contains that character, as the injection
         // will not be able to register that keypress (as it is already pressed).
         // To solve the problem, before an expansion we get which keys are currently pressed
         // and inject a key_release event so that they can be further registered.
-        self.fast_release_all_keys();
-
-        let c_string = CString::new(string).context("unable to create CString")?;
-        let delay = options.delay * 1000;
-
-        unsafe {
-            ffi::fast_enter_text_window(
-                self.xdo,
-                self.get_focused_window(),
-                c_string.as_ptr(),
-                delay.try_into().unwrap(),
-            );
-        }
-
-        Ok(())
+        Ok(()) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl Injector for X11XDOToolInjector {
     fn send_string(&self, string: &str, options: crate::InjectionOptions) -> anyhow::Result<()> {
         if options.disable_fast_inject {
             self.xfake_send_string(string, options)
         } else {

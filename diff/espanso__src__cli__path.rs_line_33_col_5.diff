--- espanso/src/cli/path.rs
+++ replace path_main -> i32 with 0
@@ -25,45 +25,10 @@
         requires_config: true,
         subcommand: "path".to_string(),
         entry: path_main,
         ..Default::default()
     }
 }
 
 fn path_main(args: CliModuleArgs) -> i32 {
-    let paths = args.paths.expect("missing paths argument");
-    let cli_args = args.cli_args.expect("missing cli_args argument");
-
-    if cli_args.subcommand_matches("config").is_some() {
-        println!("{}", paths.config.to_string_lossy());
-    } else if cli_args.subcommand_matches("packages").is_some() {
-        println!("{}", paths.packages.to_string_lossy());
-    } else if cli_args.subcommand_matches("data").is_some()
-        || cli_args.subcommand_matches("runtime").is_some()
-    {
-        println!("{}", paths.runtime.to_string_lossy());
-    } else if cli_args.subcommand_matches("default").is_some() {
-        println!(
-            "{}",
-            paths
-                .config
-                .join("config")
-                .join("default.yml")
-                .to_string_lossy()
-        );
-    } else if cli_args.subcommand_matches("base").is_some() {
-        println!(
-            "{}",
-            paths
-                .config
-                .join("match")
-                .join("base.yml")
-                .to_string_lossy()
-        );
-    } else {
-        println!("Config: {}", paths.config.to_string_lossy());
-        println!("Packages: {}", paths.packages.to_string_lossy());
-        println!("Runtime: {}", paths.runtime.to_string_lossy());
-    }
-
-    0
+    0 /* ~ changed by cargo-mutants ~ */
 }

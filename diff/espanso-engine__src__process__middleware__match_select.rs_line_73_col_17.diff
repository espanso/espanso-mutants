--- espanso-engine/src/process/middleware/match_select.rs
+++ delete match arm
@@ -65,32 +65,17 @@
         if let EventType::MatchesDetected(m_event) = event.etype {
             let matches_ids: Vec<i32> = m_event.matches.iter().map(|m| m.id).collect();
 
             // Find the matches that are actually valid in the current context
             let valid_ids = self.match_filter.filter_active(&matches_ids);
 
             return match valid_ids.len() {
                 0 => Event::caused_by(event.source_id, EventType::NOOP), // No valid matches, consume the event
-                1 => {
-                    // Only one match, no need to show a selection dialog
-                    let m = m_event
-                        .matches
-                        .into_iter()
-                        .find(|m| m.id == *valid_ids.first().unwrap());
-                    if let Some(m) = m {
-                        Event::caused_by(
-                            event.source_id,
-                            EventType::MatchSelected(MatchSelectedEvent { chosen: m }),
-                        )
-                    } else {
-                        error!("MatchSelectMiddleware could not find the correspondent match");
-                        Event::caused_by(event.source_id, EventType::NOOP)
-                    }
-                }
+                 /* ~ changed by cargo-mutants ~ */
                 _ => {
                     let start_event_id = self.event_sequence_provider.get_next_id();
 
                     // Multiple matches, we need to ask the user which one to use
                     let next_event = if let Some(selected_id) =
                         self.match_selector.select(&valid_ids, m_event.is_search)
                     {
                         let m = m_event.matches.into_iter().find(|m| m.id == selected_id);

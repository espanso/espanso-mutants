--- espanso/src/config.rs
+++ replace populate_default_config -> Result<()> with Ok(())
@@ -25,55 +25,17 @@
 };
 use log::{error, info, warn};
 use std::path::Path;
 
 const DEFAULT_CONFIG_FILE_CONTENT: &str = include_str!("./res/config/default.yml");
 const DEFAULT_MATCH_FILE_CONTENT: &str = include_str!("./res/config/base.yml");
 
 pub fn populate_default_config(config_dir: &Path) -> Result<()> {
-    if !config_dir.is_dir() {
-        info!(
-            "generating base configuration directory in: {:?}",
-            config_dir
-        );
-        std::fs::create_dir_all(config_dir)?;
-    }
-
-    let sub_config_dir = config_dir.join("config");
-    let sub_match_dir = config_dir.join("match");
-
-    if !sub_config_dir.is_dir() {
-        info!("generating config directory in: {:?}", sub_config_dir);
-        std::fs::create_dir_all(&sub_config_dir)?;
-    }
-    if !sub_match_dir.is_dir() {
-        info!("generating match directory in: {:?}", sub_match_dir);
-        std::fs::create_dir_all(&sub_match_dir)?;
-    }
-
-    let default_file = sub_config_dir.join("default.yml");
-    let match_file = sub_match_dir.join("base.yml");
-
-    if !default_file.is_file() {
-        info!(
-            "populating default.yml file with initial content: {:?}",
-            default_file
-        );
-        std::fs::write(default_file, DEFAULT_CONFIG_FILE_CONTENT)?;
-    }
-    if !match_file.is_file() {
-        info!(
-            "populating base.yml file with initial content: {:?}",
-            match_file
-        );
-        std::fs::write(match_file, DEFAULT_MATCH_FILE_CONTENT)?;
-    }
-
-    Ok(())
+    Ok(()) /* ~ changed by cargo-mutants ~ */
 }
 
 pub struct ConfigLoadResult {
     pub config_store: Box<dyn ConfigStore>,
     pub match_store: Box<dyn MatchStore>,
     pub non_fatal_errors: Vec<NonFatalErrorSet>,
 }
 
